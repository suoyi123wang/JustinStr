/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 30 08:41:34 GMT 2022
 */

package gobang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import gobang.ChessPieces;
import gobang.Input;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Input_ESTest extends Input_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Input input0 = new Input();
      ChessPieces chessPieces0 = input0.input("ZXNsIcFXY+Q*");
      assertNull(chessPieces0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Input input0 = new Input();
      ChessPieces chessPieces0 = input0.input(";QPJc+wtD$}q.Q1@{");
      assertNull(chessPieces0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      input0.input("");
//      try {
//        input0.input("");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
//
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      input0.input((String) null);
//      try {
//        input0.input((String) null);
//        fail("Expecting exception: NullPointerException");
//
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("gobang.Input", e);
//      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Input input0 = new Input();
      ChessPieces chessPieces0 = input0.input("Y4W");
      assertNotNull(chessPieces0);
      assertEquals(25, chessPieces0.getY());
      assertEquals("White", chessPieces0.getColor());
      assertEquals(4, chessPieces0.getX());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Input input0 = new Input();
      ChessPieces chessPieces0 = input0.input("White");
      assertNull(chessPieces0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Input input0 = new Input();
      ChessPieces chessPieces0 = input0.input("TFfFB");
      assertNull(chessPieces0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Input input0 = new Input();
      ChessPieces chessPieces0 = input0.input("m");
      assertNull(chessPieces0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Input input0 = new Input();
      ChessPieces chessPieces0 = input0.input("Y0W");
      assertNull(chessPieces0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Input input0 = new Input();
      ChessPieces chessPieces0 = input0.input("@bT");
      assertNull(chessPieces0);
  }
}
