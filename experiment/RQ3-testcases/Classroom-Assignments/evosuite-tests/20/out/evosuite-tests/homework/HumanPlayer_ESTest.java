/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 30 08:58:58 GMT 2022
 */

package homework;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import homework.ChessRecord;
import homework.HumanPlayer;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HumanPlayer_ESTest extends HumanPlayer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      int[] intArray0 = new int[10];
      ChessRecord.b1 = intArray0;
      intArray0[2] = 1;
      // Undeclared exception!
      try { 
        humanPlayer0.isNoRepeat(225, "&1");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("homework.HumanPlayer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      boolean boolean0 = humanPlayer0.isLegal("I-14");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      boolean boolean0 = humanPlayer0.isLegal("I15");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      boolean boolean0 = humanPlayer0.isLegal("O1");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      String string0 = humanPlayer0.parsePlayer2(64, "e1");
      assertEquals("e1", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      // Undeclared exception!
      try { 
        humanPlayer0.parsePlayer2(1728, "&1");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -27
         //
         verifyException("homework.HumanPlayer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      SystemInUtil.addInputLine("C7");
      String string0 = humanPlayer0.parsePlayer1(201, "C7");
      assertEquals("C7", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      // Undeclared exception!
      try { 
        humanPlayer0.parsePlayer2((-2146), "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      // Undeclared exception!
      try { 
        humanPlayer0.parsePlayer2(0, "homework.Board");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"omework.Board\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      // Undeclared exception!
      try { 
        humanPlayer0.parsePlayer2((-2146), (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("homework.HumanPlayer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      // Undeclared exception!
      try { 
        humanPlayer0.parsePlayer1(226, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      // Undeclared exception!
      try { 
        humanPlayer0.parsePlayer1(225, "--------------------------------------");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-------------------------------------\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      // Undeclared exception!
      try { 
        humanPlayer0.parsePlayer1(15, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("homework.HumanPlayer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      // Undeclared exception!
      try { 
        humanPlayer0.parsePlayer1(1, "u1");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 20
         //
         verifyException("homework.HumanPlayer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      // Undeclared exception!
      try { 
        humanPlayer0.isNoRepeat(0, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      // Undeclared exception!
      try { 
        humanPlayer0.isNoRepeat(184, "hwc2cK");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"wc2cK\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      // Undeclared exception!
      try { 
        humanPlayer0.isNoRepeat(1656, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("homework.HumanPlayer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      // Undeclared exception!
      try { 
        humanPlayer0.isLegal("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      // Undeclared exception!
      try { 
        humanPlayer0.isLegal("homework.Board");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"omework.Board\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      // Undeclared exception!
      try { 
        humanPlayer0.isLegal((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("homework.HumanPlayer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SystemInUtil.addInputLine("");
      HumanPlayer humanPlayer0 = new HumanPlayer();
      // Undeclared exception!
      try { 
        humanPlayer0.input();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SystemInUtil.addInputLine("Rkz*z]\"{");
      HumanPlayer humanPlayer0 = new HumanPlayer();
      // Undeclared exception!
      try { 
        humanPlayer0.input();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"kz*z]\"{\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      boolean boolean0 = humanPlayer0.isNoRepeat(225, "n1");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SystemInUtil.addInputLine("A1");
      HumanPlayer humanPlayer0 = new HumanPlayer();
      humanPlayer0.input();
      humanPlayer0.parsePlayer2(64, "A1");
      SystemInUtil.addInputLine("");
      humanPlayer0.isNoRepeat(217, "H0");
      humanPlayer0.isNoRepeat(64, "H0");
      humanPlayer0.isLegal("H0");
      // Undeclared exception!
      try { 
        humanPlayer0.parsePlayer2(0, "homework.Board");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"omework.Board\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      SystemInUtil.addInputLine("+1");
      // Undeclared exception!
      try { 
        humanPlayer0.input();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      boolean boolean0 = humanPlayer0.isLegal("&1");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      boolean boolean0 = humanPlayer0.isLegal("I614");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      boolean boolean0 = humanPlayer0.isLegal("~9");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HumanPlayer humanPlayer0 = new HumanPlayer();
      // Undeclared exception!
      try { 
        humanPlayer0.parsePlayer2(1895, "C7");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }
}
