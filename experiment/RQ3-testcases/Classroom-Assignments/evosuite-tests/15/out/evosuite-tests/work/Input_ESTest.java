/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 30 08:50:41 GMT 2022
 */

package work;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import work.ChessPieces;
import work.Input;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Input_ESTest extends Input_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Input input0 = new Input();
      input0.input("I-2B");
      assertTrue(Input.isWrong);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Input input0 = new Input();
      input0.input("jviX*u-r{");
      assertTrue(Input.isWrong);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Input input0 = new Input();
      input0.input("z$Ty.mZ3_ud\"5ip=8=>");
      assertTrue(Input.isWrong);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Input input0 = new Input();
      ChessPieces chessPieces0 = input0.input("@|=}\" oVN&}4P");
      assertNull(chessPieces0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Input input0 = new Input();
      ChessPieces chessPieces0 = input0.input("u^KMK7.>4_rD(fU?TB");
      assertNull(chessPieces0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.input((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("work.Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Input input0 = new Input();
      input0.input("Y5W");
      assertFalse(Input.isWrong);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Input input0 = new Input();
      input0.input("k0W");
      assertTrue(Input.isWrong);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.input("B");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Input input0 = new Input();
      ChessPieces chessPieces0 = input0.input("|g&\"XH%j");
      assertNull(chessPieces0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Input input0 = new Input();
      ChessPieces chessPieces0 = input0.input("#n\"u-5_oM&*;AVj_");
      assertNull(chessPieces0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.input("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
