/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 30 09:06:42 GMT 2022
 */

package Chess;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Chess.ChessPieces;
import Chess.Input;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Input_ESTest extends Input_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Input input0 = new Input();
      ChessPieces chessPieces0 = input0.input("White");
      assertNull(chessPieces0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Input input0 = new Input();
      ChessPieces chessPieces0 = input0.input("Zv0eF");
      assertNull(chessPieces0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Input input0 = new Input();
      ChessPieces chessPieces0 = input0.input("@(");
      assertNull(chessPieces0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      input0.input("W");
//      try {
//        input0.input("W");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
//
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      input0.input((String) null);
//      try {
//        input0.input((String) null);
//        fail("Expecting exception: NullPointerException");
//
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("Chess.Input", e);
//      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Input input0 = new Input();
      ChessPieces chessPieces0 = input0.input("V+6B");
      assertNotNull(chessPieces0);
      assertEquals(22, chessPieces0.getY());
      assertEquals(6, chessPieces0.getX());
      assertEquals("Black", chessPieces0.getColor());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Input input0 = new Input();
      ChessPieces chessPieces0 = input0.input("N>7wSdXXqW");
      assertNull(chessPieces0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Input input0 = new Input();
      ChessPieces chessPieces0 = input0.input("NJD$89A");
      assertNull(chessPieces0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Input input0 = new Input();
      ChessPieces chessPieces0 = input0.input("\u68CB\u5B50\u7684\u989C\u8272\u9519\u8BEF");
      assertNull(chessPieces0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Input input0 = new Input();
      ChessPieces chessPieces0 = input0.input("V+0B");
      assertNull(chessPieces0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Input input0 = new Input();
      ChessPieces chessPieces0 = input0.input("+592c)");
      assertNull(chessPieces0);
  }
}
