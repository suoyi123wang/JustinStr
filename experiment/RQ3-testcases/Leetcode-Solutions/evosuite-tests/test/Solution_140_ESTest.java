/*
 * This file was automatically generated by EvoSuite
 * Mon May 02 11:20:48 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution_140_ESTest extends Solution_140_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution_140 solution_140_0 = new Solution_140();
      String string0 = solution_140_0.maskPII("9k*0-U4peV$1");
      assertEquals("+-***-***-9041", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution_140 solution_140_0 = new Solution_140();
      // Undeclared exception!
      solution_140_0.maskPII("@N");
//      try {
//        solution_140_0.maskPII("@N");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
//
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution_140 solution_140_0 = new Solution_140();
      // Undeclared exception!
      solution_140_0.maskPII("``cfj5z6;");
//      try {
//        solution_140_0.maskPII("``cfj5z6;");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
//
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution_140 solution_140_0 = new Solution_140();
      // Undeclared exception!
      try { 
        solution_140_0.maskPII((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Solution_140", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution_140 solution_140_0 = new Solution_140();
      String string0 = solution_140_0.maskPII("01}V2q10K808N8h4O3");
      assertEquals("+*-***-***-8843", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Solution_140 solution_140_0 = new Solution_140();
      String string0 = solution_140_0.maskPII("2@!mD%,y.goo7");
      assertEquals("2*****2@!md%,y.goo7", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Solution_140 solution_140_0 = new Solution_140();
      String string0 = solution_140_0.maskPII("1K}B2qiL10K808N8h4O3");
      assertEquals("***-***-8843", string0);
  }
}
