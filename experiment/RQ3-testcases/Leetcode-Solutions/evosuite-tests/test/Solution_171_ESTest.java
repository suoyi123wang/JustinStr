/*
 * This file was automatically generated by EvoSuite
 * Mon May 02 09:25:22 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution_171_ESTest extends Solution_171_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Solution_171 solution_171_0 = new Solution_171();
      boolean boolean0 = solution_171_0.validPalindrome("1'^e<ia$l/'", 1, 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Solution_171 solution_171_0 = new Solution_171();
      boolean boolean0 = solution_171_0.validPalindrome("Cn42vDB:,Ie");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Solution_171 solution_171_0 = new Solution_171();
      boolean boolean0 = solution_171_0.validPalindrome("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Solution_171 solution_171_0 = new Solution_171();
      // Undeclared exception!
      try { 
        solution_171_0.validPalindrome("Cn42vDB:,Ie", (-1), 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Solution_171 solution_171_0 = new Solution_171();
      // Undeclared exception!
      try { 
        solution_171_0.validPalindrome((String) null, (-1342), 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Solution_171", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Solution_171 solution_171_0 = new Solution_171();
      // Undeclared exception!
      try { 
        solution_171_0.validPalindrome((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Solution_171", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Solution_171 solution_171_0 = new Solution_171();
      boolean boolean0 = solution_171_0.validPalindrome("unF$?YiVuoR]k%f", 0, 8);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Solution_171 solution_171_0 = new Solution_171();
      boolean boolean0 = solution_171_0.validPalindrome("1'^e<ia$l/'", 0, 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Solution_171 solution_171_0 = new Solution_171();
      boolean boolean0 = solution_171_0.validPalindrome("gJrJ");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Solution_171 solution_171_0 = new Solution_171();
      boolean boolean0 = solution_171_0.validPalindrome("KP=K");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Solution_171 solution_171_0 = new Solution_171();
      boolean boolean0 = solution_171_0.validPalindrome("|");
      assertTrue(boolean0);
  }
}
