/*
 * This file was automatically generated by EvoSuite
 * Mon May 02 08:50:07 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution_11_ESTest extends Solution_11_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution_11 solution_11_0 = new Solution_11();
      boolean boolean0 = solution_11_0.isInterleave("Solution_11", "", "N}uW&4x@m*'");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution_11 solution_11_0 = new Solution_11();
      boolean boolean0 = solution_11_0.isInterleave("", "#", "E[Ka");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution_11 solution_11_0 = new Solution_11();
      // Undeclared exception!
      try { 
        solution_11_0.isInterleave("", (String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Solution_11", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution_11 solution_11_0 = new Solution_11();
      boolean boolean0 = solution_11_0.isInterleave("", "Gh!l[@/nEM", "Gh!l[@/nEM");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution_11 solution_11_0 = new Solution_11();
      boolean boolean0 = solution_11_0.isInterleave(",?{bH", "", ",?{bH");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Solution_11 solution_11_0 = new Solution_11();
      boolean boolean0 = solution_11_0.isInterleave("", " R?SIkk/", "");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Solution_11 solution_11_0 = new Solution_11();
      boolean boolean0 = solution_11_0.isInterleave("?^T}d2#@w", "?^T}d2#@w", "pD!jK`^<PV@:(8:+j;");
      assertFalse(boolean0);
  }
}
