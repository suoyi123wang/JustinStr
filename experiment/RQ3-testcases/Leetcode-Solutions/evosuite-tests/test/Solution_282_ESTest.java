/*
 * This file was automatically generated by EvoSuite
 * Mon May 02 09:01:21 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution_282_ESTest extends Solution_282_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution_282 solution_282_0 = new Solution_282();
      List<String> list0 = solution_282_0.letterCombinations("");
      HashMap<Character, String> hashMap0 = new HashMap<Character, String>();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      // Undeclared exception!
      try { 
        solution_282_0.backtrack(list0, hashMap0, "jkl", 1737, stringBuffer0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution_282 solution_282_0 = new Solution_282();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      HashMap<Character, String> hashMap0 = new HashMap<Character, String>();
      // Undeclared exception!
      try { 
        solution_282_0.backtrack(linkedList0, hashMap0, "2EX*=R&uqR-b^?A>3w", 0, (StringBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Solution_282", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution_282 solution_282_0 = new Solution_282();
      List<String> list0 = solution_282_0.letterCombinations("7");
      assertEquals(4, list0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution_282 solution_282_0 = new Solution_282();
      List<String> list0 = solution_282_0.letterCombinations("");
      HashMap<Character, String> hashMap0 = new HashMap<Character, String>();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      solution_282_0.backtrack(list0, hashMap0, "", 0, stringBuffer0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution_282 solution_282_0 = new Solution_282();
      // Undeclared exception!
      try { 
        solution_282_0.letterCombinations("Q)GF");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Solution_282", e);
      }
  }
}
