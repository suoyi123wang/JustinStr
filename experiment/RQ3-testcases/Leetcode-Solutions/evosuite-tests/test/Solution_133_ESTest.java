/*
 * This file was automatically generated by EvoSuite
 * Mon May 02 10:53:47 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution_133_ESTest extends Solution_133_ESTest_scaffolding {

//  @Test(timeout = 4000)
//  public void test00()  throws Throwable  {
//      Solution_133 solution_133_0 = new Solution_133();
//      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
//      solution_133_0.memo = (Map<String, Integer>) hashMap0;
//      LinkedList<int[]> linkedList0 = new LinkedList<int[]>();
//      int[] intArray0 = new int[3];
//      linkedList0.add(intArray0);
//      HashMap<String, Integer> hashMap1 = new HashMap<String, Integer>();
//      hashMap0.put("a", (Integer) null);
//      int[] intArray1 = new int[4];
//      intArray1[0] = 1259;
//      intArray1[1] = (-1897);
//      intArray1[2] = 1259;
//      intArray1[3] = 2222;
//      solution_133_0.numCycles(linkedList0, intArray1);
//  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Solution_133 solution_133_0 = new Solution_133();
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      solution_133_0.memo = (Map<String, Integer>) hashMap0;
      LinkedList<int[]> linkedList0 = new LinkedList<int[]>();
      Integer.getInteger("V");
      hashMap0.put("V", (Integer) null);
      // Undeclared exception!
      solution_133_0.kSimilarity("VneB", "V");
//      try {
//        solution_133_0.kSimilarity("VneB", "V");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
//
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Solution_133 solution_133_0 = new Solution_133();
      String string0 = "f";
      solution_133_0.kSimilarity("f", "f");
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      solution_133_0.permutations(stringArray0, 0, 5);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Solution_133 solution_133_0 = new Solution_133();
      String string0 = "f";
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>(97, 97);
      solution_133_0.memo = (Map<String, Integer>) hashMap0;
      // Undeclared exception!
      solution_133_0.kSimilarity("fVYBM0", "f");
//      try {
//        solution_133_0.kSimilarity("fVYBM0", "f");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
//
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Solution_133 solution_133_0 = new Solution_133();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "P*>l jRj~$ja}.";
      stringArray0[2] = "[U.6lvniMA";
      stringArray0[3] = "]MrbY[3uZ0/L";
      solution_133_0.alphabet = stringArray0;
      String string0 = "";
      solution_133_0.kSimilarity("", "Q=");
      LinkedList<int[]> linkedList0 = new LinkedList<int[]>();
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = (-2367);
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 1;
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = 0;
      linkedList0.offerLast(intArray0);
      int[] intArray1 = new int[0];
      // Undeclared exception!
      try { 
        solution_133_0.numCycles(linkedList0, intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Solution_133 solution_133_0 = new Solution_133();
      LinkedList<int[]> linkedList0 = new LinkedList<int[]>();
      int[] intArray0 = new int[3];
      linkedList0.offer(intArray0);
      linkedList0.add(intArray0);
      int int0 = 0;
      String string0 = "c";
      String string1 = "n";
      Solution_133 solution_133_1 = new Solution_133();
      // Undeclared exception!
      solution_133_1.kSimilarity("c", "u,Wpv");
  }
//
//  @Test(timeout = 4000)
//  public void test06()  throws Throwable  {
//      Solution_133 solution_133_0 = new Solution_133();
//      String[] stringArray0 = new String[8];
//      stringArray0[0] = "/j[,@(pt]k|pZ'ry G";
//      stringArray0[1] = "Solution_133";
//      stringArray0[2] = "";
//      stringArray0[3] = "_bDMQxQ[l]~^SzV4[";
//      stringArray0[4] = "";
//      stringArray0[5] = "";
//      stringArray0[6] = "D6^:M5%";
//      stringArray0[7] = "tYyD}?s}}t$gC':+t";
//      solution_133_0.permutations(stringArray0, (-707), (-707));
//      LinkedList<int[]> linkedList0 = new LinkedList<int[]>();
//      int[] intArray0 = new int[9];
//      intArray0[0] = (-707);
//      intArray0[1] = (-707);
//      intArray0[2] = (-707);
//      intArray0[3] = 0;
//      intArray0[4] = (-707);
//      intArray0[5] = (-1);
//      intArray0[6] = (-707);
//      intArray0[7] = (-707);
//      intArray0[8] = (-707);
//      // Undeclared exception!
//      try {
//        solution_133_0.numCycles(linkedList0, intArray0);
//        fail("Expecting exception: NullPointerException");
//
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test07()  throws Throwable  {
//      Solution_133 solution_133_0 = new Solution_133();
//      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
//      solution_133_0.memo = (Map<String, Integer>) hashMap0;
//      LinkedList<int[]> linkedList0 = new LinkedList<int[]>();
//      int[] intArray0 = new int[3];
//      linkedList0.add(intArray0);
//      HashMap<String, Integer> hashMap1 = new HashMap<String, Integer>();
//      solution_133_0.numCycles(linkedList0, intArray0);
//  }
//
//  @Test(timeout = 4000)
//  public void test08()  throws Throwable  {
//      Solution_133 solution_133_0 = new Solution_133();
//      LinkedList<int[]> linkedList0 = new LinkedList<int[]>();
//      int[] intArray0 = new int[3];
//      linkedList0.offer(intArray0);
//      linkedList0.add(intArray0);
//      intArray0[0] = (-1);
//      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
//      solution_133_0.memo = (Map<String, Integer>) hashMap0;
//      intArray0[2] = 302;
//      int int0 = solution_133_0.numCycles(linkedList0, intArray0);
//      assertEquals((-2147483647), int0);
//  }
//
//  @Test(timeout = 4000)
//  public void test09()  throws Throwable  {
//      Solution_133 solution_133_0 = new Solution_133();
//      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
//      solution_133_0.memo = (Map<String, Integer>) hashMap0;
//      LinkedList<int[]> linkedList0 = new LinkedList<int[]>();
//      linkedList0.pollFirst();
//      LinkedList<int[]> linkedList1 = new LinkedList<int[]>();
//      int int0 = solution_133_0.numCycles(linkedList1, (int[]) null);
//      assertEquals(Integer.MIN_VALUE, int0);
//  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Solution_133 solution_133_0 = new Solution_133();
      LinkedList<int[]> linkedList0 = new LinkedList<int[]>();
      int[] intArray0 = new int[3];
      linkedList0.offer(intArray0);
      linkedList0.add(intArray0);
      intArray0[0] = 0;
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      solution_133_0.memo = (Map<String, Integer>) hashMap0;
      int int0 = 0;
      intArray0[1] = 0;
      intArray0[2] = 302;
      solution_133_0.numCycles(linkedList0, intArray0);
      solution_133_0.numCycles(linkedList0, intArray0);
      String string0 = null;
      // Undeclared exception!
      solution_133_0.kSimilarity((String) null, (String) null);
//      try {
//        solution_133_0.kSimilarity((String) null, (String) null);
//        fail("Expecting exception: NullPointerException");
//
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Solution_133 solution_133_0 = new Solution_133();
      // Undeclared exception!
      solution_133_0.kSimilarity("7+`FC}d` H'eO*q]", "");
//      try {
//        solution_133_0.kSimilarity("7+`FC}d` H'eO*q]", "");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
//
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Solution_133 solution_133_0 = new Solution_133();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      solution_133_0.alphabet = stringArray0;
      String[] stringArray1 = new String[2];
      stringArray1[0] = "";
      stringArray1[1] = "";
      int int0 = Integer.MIN_VALUE;
      int int1 = 0;
      solution_133_0.permutations(stringArray1, Integer.MIN_VALUE, 0);
      solution_133_0.kSimilarity("", "");
      // Undeclared exception!
      solution_133_0.kSimilarity("", "f");
//      try {
//        solution_133_0.kSimilarity("", "f");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
//
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Solution_133 solution_133_0 = new Solution_133();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "feC";
      stringArray0[1] = "dMHB\"C1o\"cY]SsP!2bY";
      stringArray0[2] = "c";
      String string0 = "";
      // Undeclared exception!
      solution_133_0.kSimilarity("", "n");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Solution_133 solution_133_0 = new Solution_133();
      // Undeclared exception!
      solution_133_0.kSimilarity("Fl8IAZm&", "T8I!I7kt=");
//      try {
//        solution_133_0.kSimilarity("Fl8IAZm&", "T8I!I7kt=");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
//
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Solution_133 solution_133_0 = new Solution_133();
      LinkedList<int[]> linkedList0 = new LinkedList<int[]>();
      int[] intArray0 = new int[3];
      linkedList0.offer(intArray0);
      linkedList0.add(intArray0);
      intArray0[0] = (-43);
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      solution_133_0.memo = (Map<String, Integer>) hashMap0;
      intArray0[1] = 0;
      intArray0[2] = 302;
      solution_133_0.numCycles(linkedList0, intArray0);
      solution_133_0.numCycles(linkedList0, intArray0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      String string0 = "VneB";
      // Undeclared exception!
      solution_133_0.kSimilarity("V", "VneB");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Solution_133 solution_133_0 = new Solution_133();
      String string0 = "H\\6g`O";
      String[] stringArray0 = new String[8];
      stringArray0[0] = "0+x4B28M1";
      stringArray0[1] = "H\u0006g`O";
      stringArray0[2] = "H\u0006g`O";
      stringArray0[3] = "H\u0006g`O";
      stringArray0[4] = "";
      stringArray0[5] = "H\u0006g`O";
      stringArray0[6] = "H\u0006g`O";
      stringArray0[7] = "H\u0006g`O";
      int int0 = (-1);
      // Undeclared exception!
      solution_133_0.kSimilarity(";+PkeV", " [R");
//      try {
//        solution_133_0.kSimilarity(";+PkeV", " [R");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
//
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Solution_133 solution_133_0 = new Solution_133();
      // Undeclared exception!
      solution_133_0.kSimilarity("<1/)_4),c,_Ajo", (String) null);
//      try {
//        solution_133_0.kSimilarity("<1/)_4),c,_Ajo", (String) null);
//        fail("Expecting exception: NullPointerException");
//
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("Solution_133", e);
//      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Solution_133 solution_133_0 = new Solution_133();
      // Undeclared exception!

      solution_133_0.kSimilarity((String) null, (String) null);
//      try {
//        solution_133_0.kSimilarity((String) null, (String) null);
//        fail("Expecting exception: NullPointerException");
//
//      } catch(NullPointerException e) {
//      }
  }

//  @Test(timeout = 4000)
//  public void test19()  throws Throwable  {
//      Solution_133 solution_133_0 = new Solution_133();
//      // Undeclared exception!
//      try {
//        solution_133_0.permutations((String[]) null, 1, (-2942));
//        fail("Expecting exception: NullPointerException");
//
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
//  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Solution_133 solution_133_0 = new Solution_133();
      // Undeclared exception!
      solution_133_0.kSimilarity("f", "e");
  }
//
//  @Test(timeout = 4000)
//  public void test21()  throws Throwable  {
//      Solution_133 solution_133_0 = new Solution_133();
//      String[] stringArray0 = new String[7];
//      stringArray0[0] = "";
//      stringArray0[1] = "53#F.r";
//      stringArray0[2] = "-!>";
//      stringArray0[3] = "";
//      stringArray0[4] = "";
//      stringArray0[5] = "Solution_133";
//      stringArray0[6] = "Tg#8)lh*5?dCXH@";
//      solution_133_0.permutations(stringArray0, 3253, 3253);
//      List<String> list0 = solution_133_0.permutations(stringArray0, 3, 3);
//      assertEquals(60, list0.size());
//  }
//
//  @Test(timeout = 4000)
//  public void test22()  throws Throwable  {
//      Solution_133 solution_133_0 = new Solution_133();
//      LinkedList<int[]> linkedList0 = new LinkedList<int[]>();
//      // Undeclared exception!
//      try {
//        solution_133_0.numCycles(linkedList0, (int[]) null);
//        fail("Expecting exception: NullPointerException");
//
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
//  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Solution_133 solution_133_0 = new Solution_133();
      int int0 = solution_133_0.kSimilarity("", "");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Solution_133 solution_133_0 = new Solution_133();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "P*>l jRj~$ja}.";
      stringArray0[2] = "[U.6lvniMA";
      stringArray0[3] = "]MrbY[3uZ0/L";
      solution_133_0.alphabet = stringArray0;
      int int0 = solution_133_0.kSimilarity("", "Q=");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Solution_133 solution_133_0 = new Solution_133();
      LinkedList<int[]> linkedList0 = new LinkedList<int[]>();
      int[] intArray0 = new int[7];
      intArray0[0] = (-1114);
      solution_133_0.kSimilarity("=>pfQmNa NSl_C", "=>pfQmNa NSl_C");
      linkedList0.add(intArray0);
      intArray0[1] = (-1368);
      linkedList0.offerFirst(intArray0);
      intArray0[2] = 554;
      intArray0[3] = 0;
      intArray0[4] = 3223;
      linkedList0.add(intArray0);
      linkedList0.add(intArray0);
      linkedList0.add(intArray0);
      intArray0[5] = (-1);
      int int0 = 97;
      intArray0[6] = 97;
      // Undeclared exception!
      try { 
        solution_133_0.numCycles(linkedList0, intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
