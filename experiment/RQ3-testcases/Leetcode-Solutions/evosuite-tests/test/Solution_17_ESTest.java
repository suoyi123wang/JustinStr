/*
 * This file was automatically generated by EvoSuite
 * Mon May 02 09:02:38 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution_17_ESTest extends Solution_17_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Solution_17 solution_17_0 = new Solution_17();
      boolean boolean0 = solution_17_0.validPalindrome("P{:3h{");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Solution_17 solution_17_0 = new Solution_17();
      boolean boolean0 = solution_17_0.validPalindrome("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Solution_17 solution_17_0 = new Solution_17();
      // Undeclared exception!
      try { 
        solution_17_0.validPalindrome("&_\"4KGet?BZe{", (-2544), 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Solution_17 solution_17_0 = new Solution_17();
      // Undeclared exception!
      try { 
        solution_17_0.validPalindrome((String) null, (-3167), 1241);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Solution_17", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Solution_17 solution_17_0 = new Solution_17();
      // Undeclared exception!
      try { 
        solution_17_0.validPalindrome((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Solution_17", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Solution_17 solution_17_0 = new Solution_17();
      boolean boolean0 = solution_17_0.validPalindrome("==<Xq6.D", 0, 1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Solution_17 solution_17_0 = new Solution_17();
      boolean boolean0 = solution_17_0.validPalindrome("@7R5", 0, 1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Solution_17 solution_17_0 = new Solution_17();
      boolean boolean0 = solution_17_0.validPalindrome("@7R5", 1, 1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Solution_17 solution_17_0 = new Solution_17();
      boolean boolean0 = solution_17_0.validPalindrome("rOO");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Solution_17 solution_17_0 = new Solution_17();
      boolean boolean0 = solution_17_0.validPalindrome("P)");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Solution_17 solution_17_0 = new Solution_17();
      boolean boolean0 = solution_17_0.validPalindrome("{:3h{");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Solution_17 solution_17_0 = new Solution_17();
      boolean boolean0 = solution_17_0.validPalindrome("[");
      assertTrue(boolean0);
  }
}
