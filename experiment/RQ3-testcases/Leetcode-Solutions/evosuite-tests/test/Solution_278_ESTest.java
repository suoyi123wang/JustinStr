/*
 * This file was automatically generated by EvoSuite
 * Mon May 02 11:32:09 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution_278_ESTest extends Solution_278_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution_278 solution_278_0 = new Solution_278();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Solution_278";
      List<Integer> list0 = solution_278_0.findSubstring("ghPzG*&", stringArray0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution_278 solution_278_0 = new Solution_278();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Solution_278";
      List<Integer> list0 = solution_278_0.findSubstring("Solution_278", stringArray0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution_278 solution_278_0 = new Solution_278();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "R3e#9'";
      List<Integer> list0 = solution_278_0.findSubstring("Solution_2n8", stringArray0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution_278 solution_278_0 = new Solution_278();
      String[] stringArray0 = new String[0];
      List<Integer> list0 = solution_278_0.findSubstring("4", stringArray0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution_278 solution_278_0 = new Solution_278();
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        solution_278_0.findSubstring("Solution_2n8", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Solution_278", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Solution_278 solution_278_0 = new Solution_278();
      List<Integer> list0 = solution_278_0.findSubstring("Solution_2n8", (String[]) null);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Solution_278 solution_278_0 = new Solution_278();
      List<Integer> list0 = solution_278_0.findSubstring("", (String[]) null);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Solution_278 solution_278_0 = new Solution_278();
      String[] stringArray0 = new String[6];
      List<Integer> list0 = solution_278_0.findSubstring(stringArray0[0], stringArray0);
      assertTrue(list0.isEmpty());
  }
}
