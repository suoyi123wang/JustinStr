/*
 * This file was automatically generated by EvoSuite
 * Mon May 02 11:40:07 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution_82_ESTest extends Solution_82_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Solution_82 solution_82_0 = new Solution_82();
      // Undeclared exception!
      try { 
        solution_82_0.minNumberOfFrogs("ccrV)p8[6h!8B.&");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("Solution_82", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Solution_82 solution_82_0 = new Solution_82();
      // Undeclared exception!
      try { 
        solution_82_0.minNumberOfFrogs((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Solution_82", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Solution_82 solution_82_0 = new Solution_82();
      int int0 = solution_82_0.getIndex('o');
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Solution_82 solution_82_0 = new Solution_82();
      int int0 = solution_82_0.getIndex('r');
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Solution_82 solution_82_0 = new Solution_82();
      int int0 = solution_82_0.getIndex('c');
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Solution_82 solution_82_0 = new Solution_82();
      int int0 = solution_82_0.getIndex('.');
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Solution_82 solution_82_0 = new Solution_82();
      int int0 = solution_82_0.getIndex('k');
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Solution_82 solution_82_0 = new Solution_82();
      int int0 = solution_82_0.getIndex('a');
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Solution_82 solution_82_0 = new Solution_82();
      int int0 = solution_82_0.minNumberOfFrogs("kPN&N");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Solution_82 solution_82_0 = new Solution_82();
      // Undeclared exception!
      try { 
        solution_82_0.minNumberOfFrogs("cr]V)p8[6h!8B.&");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("Solution_82", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Solution_82 solution_82_0 = new Solution_82();
      int int0 = solution_82_0.minNumberOfFrogs("}+C-aw)R");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Solution_82 solution_82_0 = new Solution_82();
      int int0 = solution_82_0.minNumberOfFrogs("");
      assertEquals(0, int0);
  }
}
