/*
 * This file was automatically generated by EvoSuite
 * Mon May 02 10:00:52 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution_111_ESTest extends Solution_111_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Solution_111 solution_111_0 = new Solution_111();
      int[] intArray0 = new int[4];
      intArray0[0] = 1147483641;
      int int0 = solution_111_0.check(intArray0, 1, 571, 1147483641, (-3489), 1147483641);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Solution_111 solution_111_0 = new Solution_111();
      int[] intArray0 = new int[7];
      // Undeclared exception!
      try { 
        solution_111_0.check(intArray0, (-1), (-348), (-152), (-348), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("Solution_111", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Solution_111 solution_111_0 = new Solution_111();
      String string0 = solution_111_0.longestDupSubstring("g0");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Solution_111 solution_111_0 = new Solution_111();
      long long0 = solution_111_0.pow(2547, 3442, 1439);
      assertEquals(1376L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Solution_111 solution_111_0 = new Solution_111();
      // Undeclared exception!
      try { 
        solution_111_0.pow(2141772255, 2141772255, 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Solution_111 solution_111_0 = new Solution_111();
      // Undeclared exception!
      try { 
        solution_111_0.longestDupSubstring((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Solution_111", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Solution_111 solution_111_0 = new Solution_111();
      // Undeclared exception!
      try { 
        solution_111_0.check((int[]) null, 70036, 70036, 70036, 70036, 70036);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Solution_111", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Solution_111 solution_111_0 = new Solution_111();
      int[] intArray0 = new int[4];
      // Undeclared exception!
      try { 
        solution_111_0.check(intArray0, 0, 75, 2021, 0, (-654));
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("Solution_111", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Solution_111 solution_111_0 = new Solution_111();
      long long0 = solution_111_0.pow(75, 1147483641, 75);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Solution_111 solution_111_0 = new Solution_111();
      int[] intArray0 = new int[5];
      intArray0[1] = (-3647);
      int int0 = solution_111_0.check(intArray0, 1, 1965, 2, 26, 2140600687);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Solution_111 solution_111_0 = new Solution_111();
      int[] intArray0 = new int[0];
      int int0 = solution_111_0.check(intArray0, 0, 0, 2848, (-763), 2848);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Solution_111 solution_111_0 = new Solution_111();
      int[] intArray0 = new int[7];
      intArray0[0] = (-1021);
      // Undeclared exception!
      try { 
        solution_111_0.check(intArray0, 2074, (-1021), (-1021), (-388), 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("Solution_111", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Solution_111 solution_111_0 = new Solution_111();
      long long0 = solution_111_0.pow((-523), 393, (-282));
      assertEquals((-553L), long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Solution_111 solution_111_0 = new Solution_111();
      String string0 = solution_111_0.longestDupSubstring("Solution_111");
      assertEquals("11", string0);
  }
}
