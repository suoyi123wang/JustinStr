/*
 * This file was automatically generated by EvoSuite
 * Mon May 02 10:19:59 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution_126_ESTest extends Solution_126_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution_126 solution_126_0 = new Solution_126();
      char[] charArray0 = new char[4];
      solution_126_0.swap(charArray0, 0, 0);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution_126 solution_126_0 = new Solution_126();
      String string0 = solution_126_0.reverseOnlyLetters("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution_126 solution_126_0 = new Solution_126();
      char[] charArray0 = new char[6];
      // Undeclared exception!
      try { 
        solution_126_0.swap(charArray0, (-3499), (-3499));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3499
         //
         verifyException("Solution_126", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution_126 solution_126_0 = new Solution_126();
      // Undeclared exception!
      try { 
        solution_126_0.reverseOnlyLetters((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Solution_126", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution_126 solution_126_0 = new Solution_126();
      // Undeclared exception!
      try { 
        solution_126_0.swap((char[]) null, (-3267), (-3267));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Solution_126", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Solution_126 solution_126_0 = new Solution_126();
      String string0 = solution_126_0.reverseOnlyLetters("te0)'lF~# v72@^");
      assertEquals("vF0)'le~# t72@^", string0);
  }
}
