/*
 * This file was automatically generated by EvoSuite
 * Mon May 02 10:35:46 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution_240_ESTest extends Solution_240_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution_240 solution_240_0 = new Solution_240();
      // Undeclared exception!
      solution_240_0.calculate("8&1h;");
//      try {
//        solution_240_0.calculate("8&1h;");
//        fail("Expecting exception: ArithmeticException");
//
//      } catch(ArithmeticException e) {
//         //
//         // / by zero
//         //
//         verifyException("Solution_240", e);
//      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution_240 solution_240_0 = new Solution_240();
      // Undeclared exception!
      solution_240_0.calculate("-uIi'o1sd*-8");
//      try {
//        solution_240_0.calculate("-uIi'o1sd*-8");
//        fail("Expecting exception: ArithmeticException");
//
//      } catch(ArithmeticException e) {
//         //
//         // / by zero
//         //
//         verifyException("Solution_240", e);
//      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution_240 solution_240_0 = new Solution_240();
      // Undeclared exception!
      solution_240_0.calculate("v79Qj1/u");
//      try {
//        solution_240_0.calculate("v79Qj1/u");
//        fail("Expecting exception: ArithmeticException");
//
//      } catch(ArithmeticException e) {
//         //
//         // / by zero
//         //
//         verifyException("Solution_240", e);
//      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution_240 solution_240_0 = new Solution_240();
      int int0 = solution_240_0.calculate("s2");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution_240 solution_240_0 = new Solution_240();
      int int0 = solution_240_0.calculate("1u");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Solution_240 solution_240_0 = new Solution_240();
      // Undeclared exception!
      solution_240_0.calculate((String) null);
//      try {
//        solution_240_0.calculate((String) null);
//        fail("Expecting exception: NullPointerException");
//
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("Solution_240", e);
//      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Solution_240 solution_240_0 = new Solution_240();
      // Undeclared exception!
      solution_240_0.calculate(",/FB!,{9S");
//      try {
//        solution_240_0.calculate(",/FB!,{9S");
//        fail("Expecting exception: ArithmeticException");
//
//      } catch(ArithmeticException e) {
//         //
//         // / by zero
//         //
//         verifyException("Solution_240", e);
//      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Solution_240 solution_240_0 = new Solution_240();
      // Undeclared exception!
      solution_240_0.calculate("*4*GIS*3KO\"YROpb(");
//      try {
//        solution_240_0.calculate("*4*GIS*3KO\"YROpb(");
//        fail("Expecting exception: ArithmeticException");
//
//      } catch(ArithmeticException e) {
//         //
//         // / by zero
//         //
//         verifyException("Solution_240", e);
//      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Solution_240 solution_240_0 = new Solution_240();
      int int0 = solution_240_0.calculate(" -2");
      assertEquals((-2), int0);
  }
}
