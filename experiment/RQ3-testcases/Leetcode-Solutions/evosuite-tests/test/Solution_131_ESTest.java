/*
 * This file was automatically generated by EvoSuite
 * Mon May 02 10:58:07 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution_131_ESTest extends Solution_131_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Solution_131 solution_131_0 = new Solution_131();
      boolean boolean0 = solution_131_0.buddyStrings("", "");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Solution_131 solution_131_0 = new Solution_131();
      boolean boolean0 = solution_131_0.buddyStrings("tb_<32", "+N");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Solution_131 solution_131_0 = new Solution_131();
      // Undeclared exception!
      try { 
        solution_131_0.buddyStrings((String) null, "Wp");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Solution_131", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Solution_131 solution_131_0 = new Solution_131();
      // Undeclared exception!
      try { 
        solution_131_0.buddyStrings("tb_<32", "tb_<32");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("Solution_131", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Solution_131 solution_131_0 = new Solution_131();
      boolean boolean0 = solution_131_0.buddyStrings("Q,", ",Q");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Solution_131 solution_131_0 = new Solution_131();
      boolean boolean0 = solution_131_0.buddyStrings("+N", "Q,");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Solution_131 solution_131_0 = new Solution_131();
      boolean boolean0 = solution_131_0.buddyStrings("Rz", "QR");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Solution_131 solution_131_0 = new Solution_131();
      boolean boolean0 = solution_131_0.buddyStrings("{y/CdSy/0<Y s}r$", "{r@v&%^ U_vX gUm");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Solution_131 solution_131_0 = new Solution_131();
      boolean boolean0 = solution_131_0.buddyStrings("ttb_W732", "ttb_W732");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Solution_131 solution_131_0 = new Solution_131();
      boolean boolean0 = solution_131_0.buddyStrings("m", "E");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Solution_131 solution_131_0 = new Solution_131();
      boolean boolean0 = solution_131_0.buddyStrings("m", "URYE2N=Z35c@)`CzG");
      assertFalse(boolean0);
  }
}
