/*
 * This file was automatically generated by EvoSuite
 * Mon May 02 09:06:57 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution_15_ESTest extends Solution_15_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution_15 solution_15_0 = new Solution_15();
      int int0 = solution_15_0.minCut("t");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution_15 solution_15_0 = new Solution_15();
      // Undeclared exception!
      solution_15_0.minCut((String) null);
//      try {
//        solution_15_0.minCut((String) null);
//        fail("Expecting exception: NullPointerException");
//
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("Solution_15", e);
//      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution_15 solution_15_0 = new Solution_15();
      // Undeclared exception!
      solution_15_0.minCut("");
//      try {
//        solution_15_0.minCut("");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
//
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1
//         //
//         verifyException("Solution_15", e);
//      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution_15 solution_15_0 = new Solution_15();
      int int0 = solution_15_0.minCut("]vv9");
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution_15 solution_15_0 = new Solution_15();
      int int0 = solution_15_0.minCut("Bf5Efl*)?W$;{");
      assertEquals(12, int0);
  }
}
