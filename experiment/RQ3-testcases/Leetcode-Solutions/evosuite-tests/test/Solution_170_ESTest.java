/*
 * This file was automatically generated by EvoSuite
 * Mon May 02 09:26:28 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution_170_ESTest extends Solution_170_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Random.setNextRandom(34);
      Solution_170 solution_170_0 = new Solution_170();
      int int0 = solution_170_0.repeatedStringMatch(":={$+ rO\"*%_X{A%", ":={$+ rO\"*%_X{A%");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Solution_170 solution_170_0 = new Solution_170();
      int int0 = solution_170_0.repeatedStringMatch("DAl2,7^]_W&", "^");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Solution_170 solution_170_0 = new Solution_170();
      int int0 = solution_170_0.repeatedStringMatch("{lkyp", "");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Solution_170 solution_170_0 = new Solution_170();
      // Undeclared exception!
      try { 
        solution_170_0.strStr((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Solution_170", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Solution_170 solution_170_0 = new Solution_170();
      // Undeclared exception!
      try { 
        solution_170_0.strStr("", "0ER&cXISf3`zwO-duv");
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("Solution_170", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Solution_170 solution_170_0 = new Solution_170();
      // Undeclared exception!
      try { 
        solution_170_0.repeatedStringMatch((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Solution_170", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Solution_170 solution_170_0 = new Solution_170();
      // Undeclared exception!
      try { 
        solution_170_0.repeatedStringMatch("", "\"n!#M3MIckagy^\"Z`r");
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("Solution_170", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Solution_170 solution_170_0 = new Solution_170();
      int int0 = solution_170_0.strStr("g{Xkr-t3E'", "-");
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Solution_170 solution_170_0 = new Solution_170();
      int int0 = solution_170_0.strStr(">BpGW[CYk$L(:l\"?4.j", ">BpGW[CYk$L(:l\"?4.j");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Solution_170 solution_170_0 = new Solution_170();
      int int0 = solution_170_0.strStr("", "r");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Solution_170 solution_170_0 = new Solution_170();
      int int0 = solution_170_0.strStr("", "");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Solution_170 solution_170_0 = new Solution_170();
      int int0 = solution_170_0.repeatedStringMatch("kRQimfmo<", "Solution_170");
      assertEquals((-1), int0);
  }
}
