/*
 * This file was automatically generated by EvoSuite
 * Mon May 02 09:04:47 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution_19_ESTest extends Solution_19_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution_19 solution_19_0 = new Solution_19();
      // Undeclared exception!
      solution_19_0.minWindow((String) null, "");
//      try {
//        solution_19_0.minWindow((String) null, "");
//        fail("Expecting exception: NullPointerException");
//
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("Solution_19", e);
//      }
  }

//  @Test(timeout = 4000)
//  public void test1()  throws Throwable  {
//      Solution_19 solution_19_0 = new Solution_19();
//      solution_19_0.ori = null;
//      // Undeclared exception!
//      try {
//        solution_19_0.check();
//        fail("Expecting exception: NullPointerException");
//
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
//  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution_19 solution_19_0 = new Solution_19();
      solution_19_0.minWindow("/9%8|{g*,`=~(YhF", "h9xW-");
      solution_19_0.minWindow("h9xW-", "");
      boolean boolean0 = solution_19_0.check();
      assertFalse(boolean0);
  }

//  @Test(timeout = 4000)
//  public void test3()  throws Throwable  {
//      Solution_19 solution_19_0 = new Solution_19();
//      boolean boolean0 = solution_19_0.check();
//      assertTrue(boolean0);
//  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution_19 solution_19_0 = new Solution_19();
      // Undeclared exception!
      solution_19_0.minWindow("Solution_19", "");
//      try {
//        solution_19_0.minWindow("Solution_19", "");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
//
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }
}
