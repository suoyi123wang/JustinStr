/*
 * This file was automatically generated by EvoSuite
 * Mon May 02 10:38:59 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution_70_ESTest extends Solution_70_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution_70 solution_70_0 = new Solution_70();
      boolean boolean0 = solution_70_0.canConvertString("37,ex\"Y", "37,ex\"Y", 2700);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution_70 solution_70_0 = new Solution_70();
      boolean boolean0 = solution_70_0.canConvertString("LmG;/#/*?/Z]%)+", "J[(:O`]9X!&", 2700);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution_70 solution_70_0 = new Solution_70();
      // Undeclared exception!
      try { 
        solution_70_0.canConvertString((String) null, "", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Solution_70", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution_70 solution_70_0 = new Solution_70();
      // Undeclared exception!
      try { 
        solution_70_0.canConvertString("P<M0})", "KG3B9P", 17);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -42
         //
         verifyException("Solution_70", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution_70 solution_70_0 = new Solution_70();
      boolean boolean0 = solution_70_0.canConvertString("5", "I", (-1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Solution_70 solution_70_0 = new Solution_70();
      boolean boolean0 = solution_70_0.canConvertString("", "'.wcn-mEK", (-1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Solution_70 solution_70_0 = new Solution_70();
      boolean boolean0 = solution_70_0.canConvertString("", "", (-1));
      assertTrue(boolean0);
  }
}
