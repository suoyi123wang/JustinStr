/*
 * This file was automatically generated by EvoSuite
 * Mon May 02 09:14:31 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution_179_ESTest extends Solution_179_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Solution_179 solution_179_0 = new Solution_179();
      int int0 = solution_179_0.numDecodings(";2% 0XLv4\"w");
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Solution_179 solution_179_0 = new Solution_179();
      int int0 = solution_179_0.check2digits('!', '*');
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Solution_179 solution_179_0 = new Solution_179();
      int int0 = solution_179_0.numDecodings("*6ChB>#0ylaL~XY@");
      assertEquals(11, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Solution_179 solution_179_0 = new Solution_179();
      int int0 = solution_179_0.numDecodings("");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Solution_179 solution_179_0 = new Solution_179();
      // Undeclared exception!
      try { 
        solution_179_0.numDecodings((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Solution_179", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Solution_179 solution_179_0 = new Solution_179();
      int int0 = solution_179_0.check2digits('z', '0');
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Solution_179 solution_179_0 = new Solution_179();
      int int0 = solution_179_0.check2digits('0', 'w');
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Solution_179 solution_179_0 = new Solution_179();
      int int0 = solution_179_0.check2digits('L', '*');
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Solution_179 solution_179_0 = new Solution_179();
      int int0 = solution_179_0.check2digits('1', '*');
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Solution_179 solution_179_0 = new Solution_179();
      int int0 = solution_179_0.check2digits('2', '*');
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Solution_179 solution_179_0 = new Solution_179();
      int int0 = solution_179_0.check2digits('*', '(');
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Solution_179 solution_179_0 = new Solution_179();
      int int0 = solution_179_0.check2digits('-', '-');
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Solution_179 solution_179_0 = new Solution_179();
      int int0 = solution_179_0.check2digits('*', '{');
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Solution_179 solution_179_0 = new Solution_179();
      int int0 = solution_179_0.check1digit('*');
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Solution_179 solution_179_0 = new Solution_179();
      int int0 = solution_179_0.check1digit('0');
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Solution_179 solution_179_0 = new Solution_179();
      int int0 = solution_179_0.check1digit('9');
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Solution_179 solution_179_0 = new Solution_179();
      int int0 = solution_179_0.check2digits('*', '*');
      assertEquals(15, int0);
  }
}
