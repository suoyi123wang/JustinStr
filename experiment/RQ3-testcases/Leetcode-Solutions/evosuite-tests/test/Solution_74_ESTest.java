/*
 * This file was automatically generated by EvoSuite
 * Mon May 02 11:15:27 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution_74_ESTest extends Solution_74_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution_74 solution_74_0 = new Solution_74();
      // Undeclared exception!
      solution_74_0.numSplits("vvMf");
//      try {
//        solution_74_0.numSplits("vvMf");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
//
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -20
//         //
//         verifyException("Solution_74", e);
//      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution_74 solution_74_0 = new Solution_74();
      // Undeclared exception!
      try { 
        solution_74_0.numSplits((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Solution_74", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution_74 solution_74_0 = new Solution_74();
      // Undeclared exception!
      solution_74_0.numSplits("el*<d$:|EAGx$r#WA`b");
//      try {
//        solution_74_0.numSplits("el*<d$:|EAGx$r#WA`b");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
//
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -55
//         //
//         verifyException("Solution_74", e);
//      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution_74 solution_74_0 = new Solution_74();
      int int0 = solution_74_0.numSplits("nvf");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution_74 solution_74_0 = new Solution_74();
      int int0 = solution_74_0.numSplits("ll");
      assertEquals(1, int0);
  }
}
