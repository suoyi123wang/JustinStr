/*
 * This file was automatically generated by EvoSuite
 * Mon May 02 11:13:18 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Solution_71_ESTest extends Solution_71_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Solution_71 solution_71_0 = new Solution_71();
      Solution_71.Seg solution_71_Seg0 = solution_71_0.new Seg(0, 0);
      int int0 = solution_71_Seg0.compareTo(solution_71_Seg0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Solution_71 solution_71_0 = new Solution_71();
      List<String> list0 = solution_71_0.maxNumOfSubstrings("");
      assertFalse(list0.contains(""));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Solution_71 solution_71_0 = new Solution_71();
      // Undeclared exception!
      try { 
        solution_71_0.maxNumOfSubstrings((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Solution_71", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Solution_71 solution_71_0 = new Solution_71();
      // Undeclared exception!
      try { 
        solution_71_0.maxNumOfSubstrings("/.rod/g.tWpB`~j");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -50
         //
         verifyException("Solution_71", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Solution_71 solution_71_0 = new Solution_71();
      Solution_71.Seg solution_71_Seg0 = solution_71_0.new Seg((-1), 0);
      int int0 = solution_71_Seg0.compareTo(solution_71_Seg0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Solution_71 solution_71_0 = new Solution_71();
      List<String> list0 = solution_71_0.maxNumOfSubstrings("bkfxcxn");
      assertEquals(5, list0.size());
  }
}
