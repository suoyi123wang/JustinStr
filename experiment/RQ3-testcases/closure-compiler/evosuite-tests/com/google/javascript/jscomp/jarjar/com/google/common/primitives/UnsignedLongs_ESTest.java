/*
 * This file was automatically generated by EvoSuite
 * Thu May 12 09:47:41 GMT 2022
 */

package com.google.javascript.jscomp.jarjar.com.google.common.primitives;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.jarjar.com.google.common.primitives.UnsignedLongs;
import java.util.Comparator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UnsignedLongs_ESTest extends UnsignedLongs_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      long long0 = UnsignedLongs.parseUnsignedLong("0000000000000000000000000");
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsignedLongs.parseUnsignedLong("/@0", 2);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // /@0
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.primitives.UnsignedLongs", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      long long0 = UnsignedLongs.remainder((-2341L), 1L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      long long0 = UnsignedLongs.remainder(0, 15L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      long long0 = UnsignedLongs.remainder((-1916L), (-1951L));
      assertEquals(35L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      long long0 = UnsignedLongs.divide(0L, 1L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      long long0 = UnsignedLongs.divide(1073741823L, 1073741823L);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      long long0 = UnsignedLongs.divide((-1L), (-1L));
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      long[] longArray0 = new long[1];
      longArray0[0] = (-5910L);
      UnsignedLongs.sortDescending(longArray0);
      assertArrayEquals(new long[] {(-5910L)}, longArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      long[] longArray0 = new long[2];
      longArray0[0] = (long) 23;
      longArray0[1] = (long) 23;
      UnsignedLongs.LexicographicalComparator unsignedLongs_LexicographicalComparator0 = UnsignedLongs.LexicographicalComparator.INSTANCE;
      long[] longArray1 = new long[5];
      longArray1[0] = (long) 23;
      longArray1[1] = (long) 23;
      int int0 = unsignedLongs_LexicographicalComparator0.compare(longArray0, longArray1);
      assertEquals((-3), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      long[] longArray0 = new long[7];
      longArray0[0] = (-2470L);
      UnsignedLongs.LexicographicalComparator unsignedLongs_LexicographicalComparator0 = UnsignedLongs.LexicographicalComparator.INSTANCE;
      long[] longArray1 = new long[5];
      int int0 = unsignedLongs_LexicographicalComparator0.compare(longArray0, longArray1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      long[] longArray0 = new long[5];
      longArray0[0] = 908L;
      long long0 = UnsignedLongs.max(longArray0);
      assertEquals(908L, long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      long long0 = UnsignedLongs.remainder((-4100L), (-1951L));
      assertEquals((-4100L), long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      long long0 = UnsignedLongs.parseUnsignedLong("000000", 12);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      long long0 = UnsignedLongs.parseUnsignedLong("2c1d56b648c6cd110", 15);
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      long long0 = UnsignedLongs.parseUnsignedLong("15");
      assertEquals(15L, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      long long0 = UnsignedLongs.parseUnsignedLong("18446744073709550295");
      assertEquals((-1321L), long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      long[] longArray0 = new long[6];
      longArray0[0] = 15L;
      long long0 = UnsignedLongs.min(longArray0);
      //  // Unstable assertion: assertEquals(15L, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[0] = (-1407L);
      longArray0[1] = (-2185L);
      longArray0[2] = (-2081L);
      longArray0[3] = (-1L);
      longArray0[4] = (-606L);
      longArray0[5] = (-1583L);
      longArray0[6] = (-1986L);
      longArray0[7] = (-2432L);
      long long0 = UnsignedLongs.min(longArray0);
      //  // Unstable assertion: assertEquals((-2185L), long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      long[] longArray0 = new long[2];
      longArray0[0] = 255L;
      long long0 = UnsignedLongs.max(longArray0);
      assertEquals(255L, long0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      long long0 = UnsignedLongs.divide((-1L), 1L);
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      long long0 = UnsignedLongs.decode("0");
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      long long0 = UnsignedLongs.decode("10000000000000000");
      assertEquals(10000000000000000L, long0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = UnsignedLongs.compare(3350L, 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = UnsignedLongs.compare((-9223372036854775776L), (-3184L));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsignedLongs.sortDescending((long[]) null, 10, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      long[] longArray0 = new long[1];
      // Undeclared exception!
      try { 
        UnsignedLongs.sortDescending(longArray0, 3266, 3266);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // java.lang.String@0000000001 (java.lang.Integer@0000000002) must not be greater than size (java.lang.Integer@0000000003)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsignedLongs.sortDescending((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsignedLongs.sort((long[]) null, 20, 20);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      long[] longArray0 = new long[14];
      // Undeclared exception!
      try { 
        UnsignedLongs.sort(longArray0, 2147483636, 2147483636);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // java.lang.String@0000000001 (java.lang.Integer@0000000002) must not be greater than size (java.lang.Integer@0000000003)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsignedLongs.parseUnsignedLong((String) null, 16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsignedLongs.parseUnsignedLong((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsignedLongs.min((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.primitives.UnsignedLongs", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsignedLongs.max((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.primitives.UnsignedLongs", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsignedLongs.join("Invalid padding: %s", (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.primitives.UnsignedLongs", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        UnsignedLongs.join((String) null, longArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsignedLongs.decode((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.primitives.ParseRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = UnsignedLongs.toString((-9223372036854775211L), 36);
      assertEquals("1y2p0ij32e8ut", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = UnsignedLongs.toString((long) 16, 16);
      assertEquals("10", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = UnsignedLongs.toString(0L, 2);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      long long0 = UnsignedLongs.parseUnsignedLong("e", 36);
      assertEquals(14L, long0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsignedLongs.parseUnsignedLong("", (-1));
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // empty string
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.primitives.UnsignedLongs", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      long long0 = UnsignedLongs.divide((-9223372036854775808L), 255L);
      assertEquals(36170086419038336L, long0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      long long0 = UnsignedLongs.divide((-1L), 4467L);
      assertEquals(4129559900091683L, long0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      long[] longArray0 = new long[6];
      UnsignedLongs.sortDescending(longArray0, 0, 2);
      assertArrayEquals(new long[] {0L, 0L, 0L, 0L, 0L, 0L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      long[] longArray0 = new long[7];
      UnsignedLongs.sort(longArray0, 1, 4);
      assertArrayEquals(new long[] {0L, 0L, 0L, 0L, 0L, 0L, 0L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      int int0 = UnsignedLongs.compare(15L, 15L);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = UnsignedLongs.toString((-1L));
      assertEquals("18446744073709551615", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      long[] longArray0 = new long[6];
      longArray0[0] = (long) (-4);
      String string0 = UnsignedLongs.join("", longArray0);
      assertEquals("1844674407370955161200000", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = UnsignedLongs.toString((long) (-4), 4);
      assertEquals("33333333333333333333333333333330", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsignedLongs.toString((long) 65, 65);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // radix (java.lang.Integer@0000000001) must be between Character.MIN_RADIX and Character.MAX_RADIX
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsignedLongs.toString((long) 1570, (-4));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // radix (java.lang.Integer@0000000001) must be between Character.MIN_RADIX and Character.MAX_RADIX
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsignedLongs.parseUnsignedLong("18446744073709551538");
       //  fail("Expecting exception: NumberFormatException");
       // Unstable assertion
      } catch(NumberFormatException e) {
         //
         // Too large for unsigned long: 18446744073709551538
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.primitives.UnsignedLongs", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsignedLongs.parseUnsignedLong("33333333333333333333333333333330", 12);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Too large for unsigned long: 33333333333333333333333333333330
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.primitives.UnsignedLongs", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsignedLongs.parseUnsignedLong("18446744073709549544", 11);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Too large for unsigned long: 18446744073709549544
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.primitives.UnsignedLongs", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsignedLongs.decode("3\fJ{, a=,4");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Error parsing value: 3\fJ{, a=,4
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.primitives.UnsignedLongs", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      long long0 = UnsignedLongs.decode("18446744073709551615");
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsignedLongs.parseUnsignedLong("Ii83|SA", 1806);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // illegal radix: 1806
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.primitives.UnsignedLongs", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsignedLongs.parseUnsignedLong("%s", (-2995));
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // illegal radix: -2995
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.primitives.UnsignedLongs", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      long long0 = UnsignedLongs.remainder((-300L), 1171L);
      assertEquals(1065L, long0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      long long0 = UnsignedLongs.remainder((-9223372036854775808L), 15L);
      assertEquals(8L, long0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      long long0 = UnsignedLongs.remainder(19, 19);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      long long0 = UnsignedLongs.remainder((-300L), (-300L));
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsignedLongs.remainder((-300L), 0L);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.primitives.UnsignedLongs", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      String string0 = UnsignedLongs.toString((-1L), 9);
      assertEquals("145808576354216723756", string0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsignedLongs.divide(0L, 0L);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.primitives.UnsignedLongs", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      long long0 = UnsignedLongs.divide((-1), (-2867L));
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      long long0 = UnsignedLongs.divide(18446744073L, (-708L));
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      long[] longArray0 = new long[1];
      UnsignedLongs.sort(longArray0);
      assertArrayEquals(new long[] {0L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      long[] longArray0 = new long[1];
      long[] longArray1 = new long[1];
      longArray1[0] = (-5910L);
      UnsignedLongs.LexicographicalComparator unsignedLongs_LexicographicalComparator0 = UnsignedLongs.LexicographicalComparator.INSTANCE;
      int int0 = unsignedLongs_LexicographicalComparator0.compare(longArray0, longArray1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      long[] longArray0 = new long[0];
      String string0 = UnsignedLongs.join("Ii83|SA", longArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      long[] longArray0 = new long[3];
      longArray0[2] = (-2072L);
      long long0 = UnsignedLongs.max(longArray0);
      assertEquals((-2072L), long0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      long[] longArray0 = new long[3];
      long long0 = UnsignedLongs.max(longArray0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        UnsignedLongs.max(longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      long[] longArray0 = new long[5];
      longArray0[0] = (long) (-4);
      long long0 = UnsignedLongs.min(longArray0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        UnsignedLongs.min(longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      UnsignedLongs.LexicographicalComparator unsignedLongs_LexicographicalComparator0 = UnsignedLongs.LexicographicalComparator.INSTANCE;
      String string0 = unsignedLongs_LexicographicalComparator0.toString();
      assertEquals("UnsignedLongs.lexicographicalComparator()", string0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsignedLongs.parseUnsignedLong("1844674407370955161218446744568184467440737095516121844674407370955161218446744073709551612");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Too large for unsigned long: 1844674407370955161218446744568184467440737095516121844674407370955161218446744073709551612
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.primitives.UnsignedLongs", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsignedLongs.sort((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      String string0 = UnsignedLongs.toString((-1651L), 7);
      assertEquals("45012021522523134130023", string0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Comparator<long[]> comparator0 = UnsignedLongs.lexicographicalComparator();
      assertNotNull(comparator0);
  }
}
