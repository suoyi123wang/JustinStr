/*
 * This file was automatically generated by EvoSuite
 * Thu May 12 10:08:52 GMT 2022
 */

package com.google.javascript.jscomp.jarjar.org.apache.tools.ant.taskdefs.rmic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.jarjar.org.apache.tools.ant.Project;
import com.google.javascript.jscomp.jarjar.org.apache.tools.ant.Task;
import com.google.javascript.jscomp.jarjar.org.apache.tools.ant.taskdefs.Available;
import com.google.javascript.jscomp.jarjar.org.apache.tools.ant.taskdefs.Rmic;
import com.google.javascript.jscomp.jarjar.org.apache.tools.ant.taskdefs.UpToDate;
import com.google.javascript.jscomp.jarjar.org.apache.tools.ant.taskdefs.condition.AntVersion;
import com.google.javascript.jscomp.jarjar.org.apache.tools.ant.taskdefs.condition.HasMethod;
import com.google.javascript.jscomp.jarjar.org.apache.tools.ant.taskdefs.rmic.RmicAdapter;
import com.google.javascript.jscomp.jarjar.org.apache.tools.ant.taskdefs.rmic.RmicAdapterFactory;
import com.google.javascript.jscomp.jarjar.org.apache.tools.ant.taskdefs.rmic.WLRmic;
import com.google.javascript.jscomp.jarjar.org.apache.tools.ant.types.CommandlineJava;
import com.google.javascript.jscomp.jarjar.org.apache.tools.ant.types.Path;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RmicAdapterFactory_ESTest extends RmicAdapterFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      // Undeclared exception!
      try { 
        RmicAdapterFactory.getRmic(". It could not be found.", (Task) rmic0, (Path) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.org.apache.tools.ant.taskdefs.rmic.RmicAdapterFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      Project project0 = new Project();
      rmic0.setProject(project0);
      try { 
        RmicAdapterFactory.getRmic(". It could not be found.", (Task) rmic0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Class not found: . It could not be found.
         //
         verifyException("com.google.javascript.jscomp.jarjar.org.apache.tools.ant.util.ClasspathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      Path path0 = new Path((Project) null, "@");
      RmicAdapter rmicAdapter0 = RmicAdapterFactory.getRmic("xnew", (Task) rmic0, path0);
      assertNotNull(rmicAdapter0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RmicAdapter rmicAdapter0 = RmicAdapterFactory.getRmic("forking", (Task) null, (Path) null);
      assertNotNull(rmicAdapter0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HasMethod hasMethod0 = new HasMethod();
      Path path0 = hasMethod0.createClasspath();
      AntVersion antVersion0 = new AntVersion();
      WLRmic wLRmic0 = (WLRmic)RmicAdapterFactory.getRmic("weblogic", (Task) antVersion0, path0);
      assertEquals("_WLStub", wLRmic0.getStubClassSuffix());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RmicAdapter rmicAdapter0 = RmicAdapterFactory.getRmic("kaffe", (Task) null, (Path) null);
      assertNotNull(rmicAdapter0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CommandlineJava commandlineJava0 = new CommandlineJava();
      Path path0 = commandlineJava0.createUpgrademodulepath((Project) null);
      RmicAdapter rmicAdapter0 = RmicAdapterFactory.getRmic("", (Task) null, path0);
      assertNotNull(rmicAdapter0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Project project0 = new Project();
      Rmic rmic0 = new Rmic();
      rmic0.setProject(project0);
      try { 
        RmicAdapterFactory.getRmic("@", (Task) rmic0, (Path) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Class not found: @
         //
         verifyException("com.google.javascript.jscomp.jarjar.org.apache.tools.ant.util.ClasspathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Available available0 = new Available();
      RmicAdapter rmicAdapter0 = RmicAdapterFactory.getRmic("xnew", (Task) available0);
      assertNotNull(rmicAdapter0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UpToDate upToDate0 = new UpToDate();
      RmicAdapter rmicAdapter0 = RmicAdapterFactory.getRmic("default", (Task) upToDate0, (Path) null);
      assertNotNull(rmicAdapter0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Rmic rmic0 = new Rmic();
      // Undeclared exception!
      try { 
        RmicAdapterFactory.getRmic("casesensitive", (Task) rmic0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.org.apache.tools.ant.taskdefs.rmic.RmicAdapterFactory", e);
      }
  }
}
