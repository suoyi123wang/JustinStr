/*
 * This file was automatically generated by EvoSuite
 * Thu May 12 10:23:08 GMT 2022
 */

package com.google.javascript.jscomp.jarjar.com.google.common.primitives;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.jarjar.com.google.common.primitives.ParseRequest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParseRequest_ESTest extends ParseRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ParseRequest parseRequest0 = ParseRequest.fromString(" np/SkAU");
      assertNotNull(parseRequest0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        ParseRequest.fromString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.primitives.ParseRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ParseRequest parseRequest0 = ParseRequest.fromString("006X");
      assertNotNull(parseRequest0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ParseRequest parseRequest0 = ParseRequest.fromString("u");
      assertNotNull(parseRequest0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ParseRequest parseRequest0 = ParseRequest.fromString("#JbWBT4Cp9HRd88");
      assertNotNull(parseRequest0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ParseRequest parseRequest0 = ParseRequest.fromString("0X;ry'dL F@WqM~F>hK");
      assertNotNull(parseRequest0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ParseRequest parseRequest0 = ParseRequest.fromString("0x0X");
      assertNotNull(parseRequest0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try { 
        ParseRequest.fromString("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // empty string
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.primitives.ParseRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ParseRequest parseRequest0 = ParseRequest.fromString("0");
      assertNotNull(parseRequest0);
  }
}
