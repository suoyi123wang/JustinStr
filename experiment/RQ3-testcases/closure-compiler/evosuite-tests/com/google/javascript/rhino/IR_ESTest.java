/*
 * This file was automatically generated by EvoSuite
 * Thu May 12 10:17:23 GMT 2022
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.jarjar.com.google.common.collect.ImmutableList;
import com.google.javascript.jscomp.parsing.parser.SourceFile;
import com.google.javascript.jscomp.serialization.NodeProperty;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.IR;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.JSTypeExpression;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.NonJSDocComment;
import com.google.javascript.rhino.Token;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.TemplateType;
import java.math.BigInteger;
import java.util.Comparator;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PriorityQueue;
import java.util.Set;
import java.util.Stack;
import java.util.Vector;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IR_ESTest extends IR_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = null;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        IR.inc((Node) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = null;
      Token token0 = Token.BITOR;
      // Undeclared exception!
      try { 
        IR.declaration((Node) null, (Node) null, token0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = IR.labelName("7'@{#('vq");
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        IR.var(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node node0 = IR.importMeta();
      Stack<Node> stack0 = new Stack<Node>();
      Node node1 = IR.script((List<Node>) stack0);
      Node node2 = Node.newNumber(0.0);
      Node node3 = IR.await(node0);
      Node node4 = IR.continueOptChainGetelem(node2, node3);
      Node[] nodeArray0 = new Node[9];
      node1.isEquivalentTo(node0, true, false, true);
      nodeArray0[0] = node2;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      nodeArray0[3] = node2;
      nodeArray0[4] = node4;
      nodeArray0[5] = node2;
      nodeArray0[6] = node1;
      nodeArray0[7] = node0;
      node0.isArrowFunction();
      nodeArray0[8] = node1;
      // Undeclared exception!
      try { 
        IR.switchNode(node4, nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = IR.importMeta();
      node0.toStringTree();
      node0.mayMutateGlobalStateOrThrow();
      // Undeclared exception!
      try { 
        IR.regexp(node0, (Node) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = IR.yield();
      assertFalse(node0.isWhile());
      
      Node node1 = IR.returnNode(node0);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      // Undeclared exception!
      try { 
        IR.getprop(node0, "3^.ak&", (String[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot add already-owned child node.
         // Child: com.google.javascript.rhino.Node@0000000001
         // Existing parent: com.google.javascript.rhino.Node@0000000002
         // New parent: com.google.javascript.rhino.Node$StringNode@0000000003
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.block(nodeArray0);
      assertFalse(node0.isCast());
      
      ErrorReporter errorReporter0 = ErrorReporter.NULL_INSTANCE;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(errorReporter0);
      // Undeclared exception!
      try { 
        IR.tryCatchFinally(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = IR.string("'9\"si)zg&,");
      node0.setLength(101);
      Node node1 = null;
      node0.addChildrenAfter((Node) null, (Node) null);
      node0.isGeneratorMarker();
      // Undeclared exception!
      try { 
        IR.eq(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node$StringNode@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = IR.breakNode();
      // Undeclared exception!
      try { 
        IR.switchNode(node0, nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = IR.script();
      assertFalse(node0.isExportSpec());
      
      Node[] nodeArray0 = new Node[8];
      nodeArray0[6] = node0;
      // Undeclared exception!
      try { 
        IR.delprop(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.block(nodeArray0);
      ErrorReporter errorReporter0 = ErrorReporter.NULL_INSTANCE;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(errorReporter0);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>();
      priorityQueue0.offer(node0);
      Node node1 = IR.block(node0);
      Node[] nodeArray1 = new Node[6];
      nodeArray1[0] = node0;
      nodeArray1[1] = node0;
      nodeArray1[2] = node0;
      nodeArray1[3] = node1;
      nodeArray1[4] = node0;
      nodeArray1[5] = node0;
      // Undeclared exception!
      try { 
        IR.arraylit(nodeArray1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // BLOCK
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = IR.block();
      // Undeclared exception!
      try { 
        IR.tryCatch(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ErrorReporter errorReporter0 = ErrorReporter.NULL_INSTANCE;
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.propdef((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = IR.breakNode();
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node0.validateProperties(consumer0);
      node0.getSourceOffset();
      // Undeclared exception!
      try { 
        IR.hook(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = Node.newString("");
      // Undeclared exception!
      try { 
        IR.sub(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node$StringNode@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node.newTemplateLitString("%39B'", ":");
      Token token0 = Token.CONTINUE;
      // Undeclared exception!
      try { 
        IR.declaration((Node) null, token0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.sheq((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      // Undeclared exception!
      try { 
        IR.script(nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String string0 = "";
      Node[] nodeArray0 = new Node[6];
      Node node0 = IR.nullNode();
      nodeArray0[0] = node0;
      // Undeclared exception!
      try { 
        IR.script(nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = Node.newTemplateLitString("@lTX1 Nht>S;L8a,", "%s can't be an expression");
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.getNonJSDocCommentString();
      // Undeclared exception!
      try { 
        IR.continueNode((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.block(nodeArray0);
      Node node1 = IR.importStar("");
      // Undeclared exception!
      try { 
        IR.ge(node1, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // IMPORT_STAR 
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.tryCatch((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.block(nodeArray0);
      ErrorReporter errorReporter0 = ErrorReporter.NULL_INSTANCE;
      Node node1 = IR.continueOptChainCall(node0, nodeArray0);
      node0.setSourceFileForTesting("com.google.javascript.rhino.IR");
      Node node2 = IR.paramList(nodeArray0);
      node2.getSourceOffset();
      // Undeclared exception!
      try { 
        IR.forIn(node2, node2, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = IR.trueNode();
      node0.setOriginalName("Unexpected OBJECTLIT child: ");
      node0.cloneNode(false);
      Node[] nodeArray0 = new Node[1];
      // Undeclared exception!
      try { 
        IR.continueOptChainCall(node0, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node node0 = IR.trueNode();
      node0.setOriginalName("Unexpected OBJECTLIT child: ");
      Node[] nodeArray0 = new Node[1];
      // Undeclared exception!
      try { 
        IR.continueOptChainCall(node0, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.assignAnd((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = IR.thisNode();
      // Undeclared exception!
      try { 
        IR.getelem(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      IR.name("Unexected OECTLI child: ");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)121;
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)86;
      byteArray0[4] = (byte)55;
      byteArray0[5] = (byte)60;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      // Undeclared exception!
      try { 
        IR.bigint((BigInteger) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)101;
      byte byte0 = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      Node node0 = IR.stringKey("2{5;/Hdv~VTP_ba%)");
      // Undeclared exception!
      try { 
        IR.propdef(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)77;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      Node node0 = IR.stringKey("2{5;/Hdv~VTP_ba%)");
      // Undeclared exception!
      try { 
        IR.propdef(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = IR.trueNode();
      Node node1 = IR.number(4095);
      Node.Prop node_Prop0 = Node.Prop.COLOR_FROM_CAST;
      node0.getProp(node_Prop0);
      Node node2 = IR.inc(node0, true);
      node2.getIsParenthesized();
      // Undeclared exception!
      try { 
        IR.assignAnd(node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = IR.importStar("Unexpected OBJECTLIT child: ");
      IR.mayBeExpression(node0);
      // Undeclared exception!
      try { 
        IR.sheq(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // IMPORT_STAR Unexpected OBJECTLIT child: 
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)77;
      Node node0 = null;
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = null;
      nodeArray0[1] = null;
      nodeArray0[2] = null;
      nodeArray0[3] = null;
      nodeArray0[4] = null;
      nodeArray0[5] = null;
      nodeArray0[6] = null;
      nodeArray0[7] = null;
      nodeArray0[8] = null;
      // Undeclared exception!
      try { 
        IR.switchNode((Node) null, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = IR.trueNode();
      Node[] nodeArray0 = new Node[0];
      IR.arrayPattern(nodeArray0);
      Node node1 = IR.delprop(node0);
      assertFalse(node1.hasParent());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = IR.trueNode();
      ErrorReporter errorReporter0 = ErrorReporter.NULL_INSTANCE;
      Locale locale0 = Locale.TAIWAN;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(errorReporter0, set0);
      JSTypeNative jSTypeNative0 = JSTypeNative.I_OBJECT_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      jSTypeRegistry0.createNullableType(objectType0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("&y&NwbK^ ", (JSType) null);
      node0.setJSType(templateType0);
      Node node1 = IR.continueNode();
      // Undeclared exception!
      try { 
        IR.function(node1, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.pos((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.arraylit(nodeArray0);
      node0.getJSDocInfo();
      Node node1 = IR.objectlit(nodeArray0);
      Token token0 = Token.ASSIGN_BITAND;
      node0.setToken(token0);
      node0.setNonJSDocComment((NonJSDocComment) null);
      IR.continueNode();
      IR.in(node1, node0);
      Node node2 = IR.thisNode();
      IR.neg(node2);
      // Undeclared exception!
      try { 
        IR.iterSpread(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000002
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      IR.nullNode();
      Node node0 = IR.nullNode();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      // Undeclared exception!
      try { 
        IR.call(node0, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot add already-owned child node.
         // Child: com.google.javascript.rhino.Node@0000000002
         // Existing parent: com.google.javascript.rhino.Node@0000000003
         // New parent: com.google.javascript.rhino.Node@0000000003
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = IR.yield();
      Node node1 = IR.not(node0);
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node0.validateProperties(consumer0);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node1;
      nodeArray0[4] = node0;
      nodeArray0[5] = node1;
      nodeArray0[6] = node0;
      // Undeclared exception!
      try { 
        IR.call(node1, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot add already-owned child node.
         // Child: com.google.javascript.rhino.Node@0000000001
         // Existing parent: com.google.javascript.rhino.Node@0000000002
         // New parent: com.google.javascript.rhino.Node@0000000003
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)101;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)60;
      byteArray0[5] = (byte)62;
      byteArray0[6] = (byte)86;
      Node node0 = IR.thisNode();
      Token token0 = Token.ASSIGN_MUL;
      Node node1 = new Node(token0);
      Node[] nodeArray0 = new Node[0];
      Node node2 = IR.call(node1, nodeArray0);
      // Undeclared exception!
      try { 
        IR.importNode(node0, node1, node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // THIS
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.and((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      Node node0 = IR.bigint(bigInteger0);
      ErrorReporter errorReporter0 = ErrorReporter.NULL_INSTANCE;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(errorReporter0);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Token token0 = Token.ITER_REST;
      Node node1 = Node.newString(token0, "");
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      // Undeclared exception!
      try { 
        IR.block(nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = IR.labelName("ABSTRACT");
      // Undeclared exception!
      try { 
        IR.and(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // LABEL_NAME ABSTRACT
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      // Undeclared exception!
      try { 
        IR.tryFinally((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = null;
      Node node1 = IR.stringKey("com.google.javascript.rhino.IR$1");
      // Undeclared exception!
      try { 
        IR.let(node1, (Node) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = IR.importMeta();
      Node node1 = IR.inc(node0, false);
      node0.setShorthandProperty(true);
      Node node2 = IR.yield();
      IR.assignOr(node2, node1);
      // Undeclared exception!
      try { 
        IR.export((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.arraylit(nodeArray0);
      Node node1 = IR.pos(node0);
      Token token0 = Token.ASSIGN_EXPONENT;
      node0.setToken(token0);
      Node node2 = IR.startOptChainCall(node1, nodeArray0);
      Node.newString("");
      Node node3 = IR.startOptChainCall(node2, nodeArray0);
      Node node4 = IR.returnNode(node3);
      assertFalse(node4.isStringKey());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.neg((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = IR.nullNode();
      node0.isOptionalEs6Typed();
      Node node1 = Node.newNumber(4095);
      node0.isIndexable();
      Node node2 = IR.continueOptChainGetelem(node0, node1);
      // Undeclared exception!
      try { 
        node2.getJSTypeRequired();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no jstypeOrColor: com.google.javascript.rhino.Node@0000000003
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = IR.breakNode();
      node0.getSourceOffset();
      Node node1 = null;
      // Undeclared exception!
      try { 
        IR.sub((Node) null, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = IR.breakNode();
      // Undeclared exception!
      try { 
        IR.coalesce(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // BREAK
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)101;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte) (-21);
      byteArray0[4] = (byte)55;
      byteArray0[0] = (byte)62;
      byteArray0[6] = (byte)86;
      byteArray0[7] = (byte)111;
      Node node0 = IR.script();
      // Undeclared exception!
      try { 
        IR.coalesce(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // SCRIPT
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)45;
      Node node0 = IR.name("#I-w%oI?eF/,");
      Node node1 = IR.startOptChainGetprop(node0, "#I-w%oI?eF/,");
      ImmutableList<Node> immutableList0 = ImmutableList.of(node1);
      ImmutableList<Node> immutableList1 = immutableList0.reverse();
      // Undeclared exception!
      try { 
        immutableList1.subList((byte)45, 11);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // java.lang.String@0000000007 (java.lang.Integer@0000000008) must not be greater than size (java.lang.Integer@0000000009)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)45;
      Node node0 = IR.name("#I-w%oI?eF/,");
      Node node1 = IR.startOptChainGetprop(node0, "nw");
      ImmutableList<Node> immutableList0 = ImmutableList.of(node1);
      ImmutableList<Node> immutableList1 = immutableList0.reverse();
      // Undeclared exception!
      try { 
        immutableList1.subList((byte)45, 11);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // java.lang.String@0000000007 (java.lang.Integer@0000000008) must not be greater than size (java.lang.Integer@0000000009)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = IR.breakNode();
      node0.toStringTree();
      Node node1 = IR.block(node0);
      Node node2 = IR.nullNode();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      nodeArray0[2] = node2;
      nodeArray0[3] = node2;
      nodeArray0[4] = node1;
      // Undeclared exception!
      try { 
        IR.call(node2, nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // BLOCK
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = IR.yield();
      Node node1 = IR.returnNode(node0);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      // Undeclared exception!
      try { 
        IR.call(node1, nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // RETURN
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Vector<Node> vector0 = new Vector<Node>();
      IR.script((List<Node>) vector0);
      Node node0 = IR.nullNode();
      // Undeclared exception!
      try { 
        IR.call(node0, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.block(nodeArray0);
      ErrorReporter errorReporter0 = ErrorReporter.NULL_INSTANCE;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(errorReporter0);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>();
      Node node1 = IR.block(nodeArray0);
      // Undeclared exception!
      try { 
        IR.doNode(node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = IR.labelName("ABSTRACT");
      Vector<Node> vector0 = new Vector<Node>();
      IR.script((List<Node>) vector0);
      IR.breakNode(node0);
      // Undeclared exception!
      try { 
        IR.neg(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = IR.continueNode();
      // Undeclared exception!
      try { 
        IR.neg(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.typeof((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = IR.trueNode();
      Node node1 = IR.typeof(node0);
      // Undeclared exception!
      try { 
        IR.and(node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = BigInteger.ZERO;
      BigInteger bigInteger2 = BigInteger.ONE;
      bigInteger0.divideAndRemainder(bigInteger2);
      // Undeclared exception!
      try { 
        IR.objectRest((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = IR.breakNode();
      IR.mayBeStatement(node0);
      node0.isOptionalEs6Typed();
      Node node1 = Node.newNumber(4095);
      node0.isIndexable();
      Node node2 = null;
      node1.removeChildren();
      // Undeclared exception!
      try { 
        IR.arrowFunction((Node) null, node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.block(nodeArray0);
      ErrorReporter errorReporter0 = ErrorReporter.NULL_INSTANCE;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(errorReporter0);
      node0.setOriginalName("AC!Sx\"dPXW\"WeM0y7i");
      Node node1 = null;
      // Undeclared exception!
      try { 
        IR.catchNode(node0, (Node) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.arraylit(nodeArray0);
      node0.getJSDocInfo();
      // Undeclared exception!
      try { 
        IR.block(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Block node cannot contain com.google.javascript.rhino.Token@0000000002
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)101;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)60;
      byteArray0[4] = (byte)55;
      byteArray0[5] = (byte)62;
      byteArray0[6] = (byte)86;
      Node node0 = IR.thisNode();
      // Undeclared exception!
      try { 
        IR.getprop(node0, "DU)Prd", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Vector<Node> vector0 = new Stack<Node>();
      IR.script((List<Node>) vector0);
      IR.yield();
      // Undeclared exception!
      try { 
        IR.breakNode((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = IR.trueNode();
      Node[] nodeArray0 = new Node[6];
      // Undeclared exception!
      try { 
        IR.startOptChainCall(node0, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.label((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Node node0 = IR.script((List<Node>) linkedList0);
      // Undeclared exception!
      try { 
        IR.tryFinally(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Stack<Node> stack0 = new Stack<Node>();
      Node node0 = IR.script((List<Node>) stack0);
      // Undeclared exception!
      try { 
        IR.stringKey("", node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node[] nodeArray0 = new Node[5];
      Node node0 = IR.number(1.0);
      nodeArray0[0] = node0;
      Node node1 = IR.continueNode();
      // Undeclared exception!
      try { 
        IR.forIn(node1, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = IR.breakNode();
      IR.mayBeStatement(node0);
      node0.isOptionalEs6Typed();
      Node.newNumber(4095);
      node0.isIndexable();
      Node node1 = null;
      // Undeclared exception!
      try { 
        IR.lt((Node) null, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = IR.labelName("7'@{#('vq");
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        IR.arrowFunction(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = IR.importStar("com.google.javascript.rhino.IR$1");
      Node node1 = IR.falseNode();
      Node[] nodeArray0 = new Node[9];
      // Undeclared exception!
      try { 
        IR.arrowFunction(node0, node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      Node node0 = IR.number(53.0);
      Node node1 = IR.string("");
      // Undeclared exception!
      try { 
        IR.forIn(node0, node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = IR.nullNode();
      boolean boolean0 = true;
      Node node1 = IR.inc(node0, true);
      node0.setSourceFileForTesting("v@B@Y>_");
      node0.mayMutateGlobalStateOrThrow();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      nodeArray0[3] = node1;
      // Undeclared exception!
      try { 
        IR.startOptChainCall(node0, nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.block(nodeArray0);
      ErrorReporter errorReporter0 = ErrorReporter.NULL_INSTANCE;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(errorReporter0);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>();
      priorityQueue0.offer(node0);
      Node node1 = IR.block(node0);
      node1.isUnusedParameter();
      IR.nullNode();
      Node node2 = IR.call(node1, nodeArray0);
      // Undeclared exception!
      try { 
        IR.constNode(node2, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.block(nodeArray0);
      ErrorReporter errorReporter0 = ErrorReporter.NULL_INSTANCE;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(errorReporter0);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>();
      priorityQueue0.offer(node0);
      Node node1 = IR.block(node0);
      Node node2 = IR.nullNode();
      IR.call(node1, nodeArray0);
      IR.trueNode();
      // Undeclared exception!
      try { 
        IR.shne(node2, node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000001058
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = IR.labelName("7'@{#('vq");
      ImmutableList.of(node0);
      HashSet<Node> hashSet0 = new HashSet<Node>();
      Node node1 = IR.falseNode();
      Node node2 = IR.continueOptChainGetprop(node1, "7'@{#('vq");
      // Undeclared exception!
      try { 
        IR.sheq(node2, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000004
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String string0 = "Unexpected OBJECTLIT child: ";
      Node node0 = IR.importStar("Unexpected OBJECTLIT child: ");
      node0.isColorFromTypeCast();
      node0.mayMutateGlobalStateOrThrow();
      node0.getJSDocInfo();
      // Undeclared exception!
      try { 
        IR.sheq(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // IMPORT_STAR Unexpected OBJECTLIT child: 
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = IR.nullNode();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[8] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      nodeArray0[7] = node0;
      nodeArray0[8] = node0;
      // Undeclared exception!
      try { 
        IR.arrayPattern(nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = IR.trueNode();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      // Undeclared exception!
      try { 
        IR.arrayPattern(nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte)0;
      BigInteger bigInteger1 = BigInteger.ZERO;
      bigInteger0.and(bigInteger1);
      BigInteger bigInteger2 = BigInteger.ONE;
      bigInteger0.divideAndRemainder(bigInteger2);
      byteArray0[5] = (byte)45;
      byteArray0[6] = (byte)0;
      Node node0 = Node.newBigInt(bigInteger0);
      Node node1 = IR.voidNode(node0);
      // Undeclared exception!
      try { 
        IR.constNode(node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte)0;
      BigInteger bigInteger1 = BigInteger.ZERO;
      bigInteger0.and(bigInteger1);
      BigInteger bigInteger2 = BigInteger.ONE;
      bigInteger0.divideAndRemainder(bigInteger2);
      byteArray0[4] = (byte)56;
      byteArray0[5] = (byte)45;
      byteArray0[6] = (byte)0;
      Node node0 = Node.newBigInt(bigInteger0);
      Node node1 = IR.voidNode(node0);
      // Undeclared exception!
      try { 
        IR.constNode(node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = IR.trueNode();
      Node.Prop node_Prop0 = Node.Prop.SYNTHETIC;
      node0.putProp(node_Prop0, node_Prop0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      // Undeclared exception!
      try { 
        IR.paramList(nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = Node.newString("defineProperty");
      node0.toString();
      Node node1 = IR.exprResult(node0);
      assertFalse(node1.isDo());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = IR.superNode();
      // Undeclared exception!
      try { 
        IR.propdef(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.arraylit(nodeArray0);
      node0.getJSDocInfo();
      Node node1 = IR.objectlit(nodeArray0);
      Node node2 = IR.sheq(node1, node0);
      node1.removeFirstChild();
      Node node3 = IR.switchNode(node2, nodeArray0);
      assertTrue(node3.hasOneChild());
      
      IR.importStar("xSY");
      // Undeclared exception!
      try { 
        IR.quotedStringKey("", node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String string0 = "P+5uV,V2U`h";
      Node node0 = IR.nullNode();
      Node node1 = IR.quotedStringKey("P+5uV,V2U`h", node0);
      node1.isOnlyModifiesArgumentsCall();
      // Undeclared exception!
      try { 
        IR.propdef(node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.arraylit(nodeArray0);
      node0.getJSDocInfo();
      Node node1 = IR.iterSpread(node0);
      Node node2 = IR.objectlit(nodeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      Token token0 = Token.ASSIGN_BITAND;
      node1.setToken(token0);
      IR.continueNode();
      IR.in(node2, node1);
      IR.thisNode();
      // Undeclared exception!
      try { 
        IR.iterSpread(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000003
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = IR.block();
      node0.getJSDocInfo();
      IR.block(node0);
      // Undeclared exception!
      try { 
        IR.iterRest(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // BLOCK
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = IR.block();
      Node.newString("ASSERT?_MATCHE@_RETURN");
      IR.mayBeStatement(node0);
      // Undeclared exception!
      try { 
        IR.whileNode(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      // Undeclared exception!
      try { 
        IR.caseNode((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.caseNode((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      // Undeclared exception!
      try { 
        IR.name((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      // Undeclared exception!
      try { 
        IR.arrayPattern(nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node[] nodeArray0 = new Node[8];
      // Undeclared exception!
      try { 
        IR.arrayPattern(nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node[] nodeArray0 = new Node[5];
      Node node0 = IR.number(1.0);
      nodeArray0[0] = node0;
      Node node1 = IR.string("4E&$g%si\"V\"%@");
      // Undeclared exception!
      try { 
        IR.forIn(node1, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      IR.thisNode();
      Node node0 = IR.falseNode();
      assertFalse(node0.isComputedProp());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      IR.trueNode();
      IR.returnNode();
      Node node0 = IR.thisNode();
      assertFalse(node0.hasChildren());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = IR.script();
      Token token0 = Token.INDEX_SIGNATURE;
      Node node1 = null;
      try {
        node1 = new Node(token0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.block(nodeArray0);
      // Undeclared exception!
      try { 
        IR.caseNode(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = IR.name("`Zq4n%+ksXfM@ R\"");
      IR.continueOptChainGetprop(node0, "`Zq4n%+ksXfM@ R\"");
      // Undeclared exception!
      try { 
        IR.var(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node$StringNode@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = IR.breakNode();
      // Undeclared exception!
      try { 
        IR.getprop(node0, "B&v,lw5cwN13cZQ*I", (String[]) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = IR.breakNode();
      // Undeclared exception!
      try { 
        IR.memberFieldDef(",qz{4U+rz(K{:O", node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      // Undeclared exception!
      try { 
        IR.labelName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.memberFunctionDef("com.google.javascript.rhino.IR$1", (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Vector<Node> vector0 = new Stack<Node>();
      Node node0 = IR.importMeta();
      Node node1 = IR.yield(node0);
      node0.addChildToBack(node1);
      // Undeclared exception!
      try { 
        IR.memberFunctionDef("bK9CT*qndD{P6/F=T\"", node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = IR.breakNode();
      Node.newString("ASSERTS_MATCHES_RETURN");
      IR.mayBeStatement(node0);
      // Undeclared exception!
      try { 
        IR.in(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // BREAK
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = IR.breakNode();
      node0.toStringTree();
      Node node1 = IR.block(node0);
      // Undeclared exception!
      try { 
        IR.iterRest(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // BLOCK
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.arraylit(nodeArray0);
      node0.getJSDocInfo();
      Node node1 = IR.objectlit(nodeArray0);
      Token token0 = Token.ASSIGN_BITAND;
      node0.setToken(token0);
      IR.continueNode();
      IR.in(node1, node0);
      IR.thisNode();
      // Undeclared exception!
      try { 
        IR.iterSpread(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000002
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.arraylit(nodeArray0);
      node0.getJSDocInfo();
      Node node1 = IR.iterSpread(node0);
      IR.objectlit(nodeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      Token token0 = Token.ASSIGN_BITAND;
      node1.setToken(token0);
      // Undeclared exception!
      try { 
        IR.continueOptChainGetprop(node1, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = IR.nullNode();
      Node node1 = IR.memberFieldDef("Function.prototype", node0);
      IR.importMeta();
      // Undeclared exception!
      try { 
        IR.continueOptChainGetprop(node1, (String) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // MEMBER_FIELD_DEF Function.prototype
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = IR.trueNode();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[6] = node0;
      // Undeclared exception!
      try { 
        IR.startOptChainGetelem(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.arraylit(nodeArray0);
      Node node1 = IR.pos(node0);
      Node node2 = IR.continueNode();
      // Undeclared exception!
      try { 
        IR.startOptChainGetelem(node1, node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // CONTINUE
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Token token0 = Token.LSH;
      Node node0 = IR.trueNode();
      // Undeclared exception!
      try { 
        IR.in(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = IR.empty();
      Node.newString("ASSERTS_MATCHES_RETURN");
      IR.mayBeStatement(node0);
      // Undeclared exception!
      try { 
        IR.in(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // EMPTY
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String string0 = "Expected a kind of node that may trigger iteration: ";
      Node[] nodeArray0 = new Node[3];
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.forIn((Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = IR.name("e]2N\"\"]^X!K3p[N[h5");
      node0.getStaticSourceFile();
      Node node1 = IR.iterSpread(node0);
      SourceFile sourceFile0 = new SourceFile("e]2N\"\"]^X!K3p[N[h5", "com.google.javascript.rhino.IR");
      com.google.javascript.jscomp.parsing.parser.util.SourcePosition sourcePosition0 = new com.google.javascript.jscomp.parsing.parser.util.SourcePosition(sourceFile0, 61, 105, 1423);
      NonJSDocComment nonJSDocComment0 = new NonJSDocComment(sourcePosition0, sourcePosition0, "");
      node1.setNonJSDocComment(nonJSDocComment0);
      // Undeclared exception!
      try { 
        IR.tryCatchFinally(node1, node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = IR.breakNode();
      Token token0 = Token.INSTANCEOF;
      // Undeclared exception!
      try { 
        IR.declaration(node0, node0, token0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      String string0 = "7'@{#('vq";
      Node node0 = IR.labelName("7'@{#('vq");
      Token token0 = Token.URSH;
      Node node1 = Node.newNumber(0.0);
      // Undeclared exception!
      try { 
        IR.declaration(node1, node0, token0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      String string0 = null;
      Node[] nodeArray0 = new Node[7];
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.assign((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node[] nodeArray0 = new Node[7];
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.assign((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = IR.name("`Zq4n%+ksXfM@ R\"");
      IR.let(node0);
      // Undeclared exception!
      try { 
        IR.not(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node$StringNode@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.breakNode();
      // Undeclared exception!
      try { 
        IR.tryFinally(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = IR.nullNode();
      // Undeclared exception!
      try { 
        IR.tryFinally(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = null;
      nodeArray0[2] = null;
      nodeArray0[3] = nodeArray0[1];
      nodeArray0[4] = null;
      // Undeclared exception!
      try { 
        IR.mayBeStatement(nodeArray0[2]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.exprResult((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      IR.name("7'@{#('vq");
      Node node0 = IR.yield();
      // Undeclared exception!
      try { 
        IR.let(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // YIELD
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = IR.block();
      // Undeclared exception!
      try { 
        IR.let(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // BLOCK
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = IR.falseNode();
      assertFalse(node0.isScript());
      
      String[] stringArray0 = new String[0];
      Node node1 = IR.falseNode();
      node1.isAsyncGeneratorFunction();
      IR.yield();
      // Undeclared exception!
      try { 
        IR.ne(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte byte0 = (byte)56;
      String string0 = "com.google.javascript.rhino.IR";
      Node node0 = IR.breakNode();
      // Undeclared exception!
      try { 
        IR.label(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = IR.breakNode();
      // Undeclared exception!
      try { 
        IR.label(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Stack<Node> stack0 = new Stack<Node>();
      IR.script((List<Node>) stack0);
      Node node0 = IR.empty();
      // Undeclared exception!
      try { 
        IR.stringKey("", node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node node0 = IR.trueNode();
      IR.stringKey("/", node0);
      // Undeclared exception!
      try { 
        IR.throwNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.continueOptChainGetprop((Node) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.arraylit(nodeArray0);
      node0.getJSDocInfo();
      Node node1 = IR.iterSpread(node0);
      ImmutableList<Node> immutableList0 = ImmutableList.of(node1);
      HashSet<Node> hashSet0 = new HashSet<Node>(immutableList0);
      IR.arraylit((Iterable<Node>) hashSet0);
      // Undeclared exception!
      try { 
        IR.continueOptChainGetprop(node1, "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // ITER_SPREAD
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>((Comparator<? super Node>) null);
      Node node0 = IR.breakNode();
      priorityQueue0.add(node0);
      // Undeclared exception!
      try { 
        IR.regexp(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.regexp((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      String string0 = "com.g>ogle.javascrSpt.rhino.IR$1";
      Node node0 = IR.importStar("com.g>ogle.javascrSpt.rhino.IR$1");
      node0.isGeneratorMarker();
      Token token0 = Token.MUL;
      // Undeclared exception!
      try { 
        IR.regexp(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.comma((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = IR.name("Unexpected OBJECTLIT child: ");
      node0.setOriginalName("Unexpected OBJECTLIT child: ");
      // Undeclared exception!
      try { 
        IR.forIn(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = IR.breakNode();
      node0.getSourceOffset();
      Node node1 = null;
      // Undeclared exception!
      try { 
        IR.forIn(node0, node0, (Node) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>();
      PriorityQueue<Node> priorityQueue1 = new PriorityQueue<Node>(priorityQueue0);
      Node node0 = IR.arraylit((Iterable<Node>) priorityQueue1);
      // Undeclared exception!
      try { 
        IR.forIn(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = IR.trueNode();
      Node node1 = IR.continueNode();
      // Undeclared exception!
      try { 
        IR.function(node0, node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      IR.importMeta();
      Stack<Node> stack0 = new Stack<Node>();
      Node node0 = IR.script((List<Node>) stack0);
      Token token0 = Token.PIPE;
      // Undeclared exception!
      try { 
        IR.declaration(node0, token0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // SCRIPT
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = IR.nullNode();
      IR.inc(node0, true);
      node0.setSourceFileForTesting(" is not a valid charset name.");
      Token token0 = Token.COMPUTED_FIELD_DEF;
      // Undeclared exception!
      try { 
        IR.declaration(node0, token0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // NULL [source_file:  is not a valid charset name.]
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      String string0 = "|S>4rJ:eQ";
      Node node0 = IR.stringKey("|S>4rJ:eQ");
      IR.mayBeStatement(node0);
      // Undeclared exception!
      try { 
        IR.exprResult(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // STRING_KEY |S>4rJ:eQ
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.ge((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node[] nodeArray0 = new Node[6];
      // Undeclared exception!
      try { 
        IR.block(nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = IR.nullNode();
      // Undeclared exception!
      try { 
        IR.computedProp(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      // Undeclared exception!
      try { 
        IR.computedProp((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.arraylit(nodeArray0);
      node0.getJSDocInfo();
      IR.iterSpread(node0);
      // Undeclared exception!
      try { 
        IR.assignAnd(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node node0 = IR.trueNode();
      Node.Prop node_Prop0 = Node.Prop.SYNTHETIC;
      node0.putProp(node_Prop0, node_Prop0);
      // Undeclared exception!
      try { 
        IR.continueOptChainGetelem(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.continueOptChainGetelem((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = IR.importStar("#8 Q");
      // Undeclared exception!
      try { 
        IR.inc(node0, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = IR.importStar("com.g>ogle.javascrSpt.rhino.IR$1");
      // Undeclared exception!
      try { 
        IR.inc(node0, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = IR.trueNode();
      Node node1 = IR.inc(node0, true);
      node1.setSourceFileForTesting(" is not a valid charset name.");
      // Undeclared exception!
      try { 
        IR.arraylit((Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node[] nodeArray0 = new Node[4];
      // Undeclared exception!
      try { 
        IR.paramList(nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node[] nodeArray0 = new Node[4];
      NodeProperty nodeProperty0 = NodeProperty.NON_INDEXABLE;
      NodeProperty nodeProperty1 = NodeProperty.REFLECTED_OBJECT;
      NodeProperty nodeProperty2 = NodeProperty.COMPUTED_PROP_VARIABLE;
      NodeProperty nodeProperty3 = NodeProperty.START_OF_OPT_CHAIN;
      NodeProperty nodeProperty4 = NodeProperty.IS_NAMESPACE;
      ImmutableList.of(nodeProperty0, nodeProperty0, nodeProperty1, nodeProperty2, nodeProperty3, nodeProperty1, nodeProperty0, nodeProperty0, nodeProperty4);
      // Undeclared exception!
      try { 
        IR.paramList(nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = IR.nullNode();
      // Undeclared exception!
      try { 
        IR.iterRest(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // NULL
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      // Undeclared exception!
      try { 
        IR.iterRest((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node[] nodeArray0 = new Node[5];
      Node node0 = IR.number(1.0);
      nodeArray0[0] = node0;
      // Undeclared exception!
      try { 
        IR.iterRest(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // NUMBER 1.0
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node node0 = IR.trueNode();
      String string0 = "zOyU";
      // Undeclared exception!
      try { 
        IR.add(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node node0 = IR.trueNode();
      IR.script();
      node0.toString();
      IR.exprResult(node0);
      // Undeclared exception!
      try { 
        IR.yield(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = IR.falseNode();
      String string0 = ".2JS";
      String[] stringArray0 = new String[3];
      stringArray0[0] = ".2JS";
      stringArray0[1] = ".2JS";
      Node node1 = IR.yield(node0);
      // Undeclared exception!
      try { 
        node0.addChildrenToBack(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // YIELD
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.export((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = Node.newString("Invalid name '%s'. Did you mean to use NodeUtil.newQName?");
      Node node1 = IR.export(node0);
      // Undeclared exception!
      try { 
        node1.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot add already-owned child node.
         // Child: com.google.javascript.rhino.Node$StringNode@0000000001
         // Existing parent: com.google.javascript.rhino.Node@0000000003
         // New parent: com.google.javascript.rhino.Node@0000000003
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = IR.returnNode();
      // Undeclared exception!
      try { 
        IR.objectSpread(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.arrayPattern(nodeArray0);
      // Undeclared exception!
      try { 
        IR.objectSpread(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.block(nodeArray0);
      ErrorReporter errorReporter0 = ErrorReporter.NULL_INSTANCE;
      node0.isQuotedString();
      Node node1 = IR.thisNode();
      IR.switchNode(node1, nodeArray0);
      // Undeclared exception!
      try { 
        IR.ifNode(node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      IR.importStar("com.google.javascript.rhino.IR$1");
      Node node0 = IR.falseNode();
      Node node1 = Node.newString("");
      Node node2 = node0.copyTypeFrom(node1);
      // Undeclared exception!
      try { 
        IR.ifNode(node2, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Stack<Node> stack0 = new Stack<Node>();
      Node node0 = IR.script((List<Node>) stack0);
      Node node1 = IR.falseNode();
      IR.stringKey("rxp", node1);
      // Undeclared exception!
      try { 
        IR.returnNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.ifNode((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = IR.nullNode();
      Node node1 = IR.memberFieldDef("P+5uV,V2U`h", node0);
      // Undeclared exception!
      try { 
        IR.continueNode(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = Node.newTemplateLitString("TYPEOF", "@lTX1 Nht>S;L8a,");
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.getNonJSDocCommentString();
      // Undeclared exception!
      try { 
        IR.continueNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.not((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = null;
      Node node1 = null;
      // Undeclared exception!
      try { 
        IR.iterSpread((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = IR.empty();
      Node.newString("ASSERTS_MATCHES_RETURN");
      IR.mayBeStatement(node0);
      // Undeclared exception!
      try { 
        IR.whileNode(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.arraylit(nodeArray0);
      node0.getJSDocInfo();
      Node node1 = IR.iterSpread(node0);
      String string0 = "";
      ImmutableList<Node> immutableList0 = ImmutableList.of(node1);
      HashSet<Node> hashSet0 = new HashSet<Node>(immutableList0);
      IR.arraylit((Iterable<Node>) hashSet0);
      // Undeclared exception!
      try { 
        IR.continueOptChainGetprop(node1, "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // ITER_SPREAD
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      String string0 = "7'@{#('vq";
      Node node0 = IR.labelName("7'@{#('vq");
      ImmutableList<Node> immutableList0 = ImmutableList.of(node0);
      HashSet<Node> hashSet0 = new HashSet<Node>(immutableList0);
      // Undeclared exception!
      try { 
        IR.arraylit((Iterable<Node>) immutableList0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // LABEL_NAME 7'@{#('vq
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = IR.name("`Zq4n%+ksXfM@ R\"");
      IR.let(node0);
      // Undeclared exception!
      try { 
        IR.exprResult(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node$StringNode@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      // Undeclared exception!
      try { 
        IR.arraylit(nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Token token0 = Token.ASSIGN_OR;
      Node node0 = IR.name("`Zq4n%+ksXfM@ R\"");
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      // Undeclared exception!
      try { 
        IR.arraylit(nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot add already-owned child node.
         // Child: com.google.javascript.rhino.Node$StringNode@0000000001
         // Existing parent: com.google.javascript.rhino.Node@0000000003
         // New parent: com.google.javascript.rhino.Node@0000000003
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node[] nodeArray0 = new Node[10];
      Node node0 = Node.newString("Unexpected OBJECTLIT child: ");
      // Undeclared exception!
      try { 
        IR.objectRest(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // STRINGLIT Unexpected OBJECTLIT child: 
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node[] nodeArray0 = new Node[4];
      Node node0 = IR.name("`Zq4n%+ksXfM@ R\"");
      Node node1 = IR.let(node0);
      node1.isAsyncGeneratorFunction();
      node0.srcref(node1);
      nodeArray0[0] = node0;
      // Undeclared exception!
      try { 
        IR.objectRest(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node$StringNode@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      IR.empty();
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.throwNode((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      IR.empty();
      // Undeclared exception!
      try { 
        IR.throwNode((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node node0 = IR.returnNode();
      String string0 = "/";
      // Undeclared exception!
      try { 
        IR.throwNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = IR.importStar("com.google.javascript.rhino.IR$1");
      // Undeclared exception!
      try { 
        IR.ge(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // IMPORT_STAR com.google.javascript.rhino.IR$1
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.eq((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = IR.string("'9\"si)zg&,");
      // Undeclared exception!
      try { 
        IR.tryCatchFinally(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node node0 = IR.string("defineProperty");
      // Undeclared exception!
      try { 
        IR.getterDef("defineProperty", node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.hook((Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Token token0 = Token.STRINGLIT;
      Node node0 = null;
      Node node1 = IR.falseNode();
      // Undeclared exception!
      try { 
        IR.hook((Node) null, node1, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = IR.nullNode();
      Node node1 = IR.memberFieldDef("P+5uV,V2U`h", node0);
      Node node2 = node0.srcrefIfMissing(node1);
      node1.isOptionalEs6Typed();
      node1.setString("9kM23MG:!;&xZ-4\tU");
      node1.srcrefIfMissing(node0);
      node2.getStaticSourceFile();
      // Undeclared exception!
      try { 
        IR.setterDef("P+5uV,V2U`h", node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = IR.trueNode();
      IR.memberFieldDef("M3;#'mW=#|PgsPGy<Di", node0);
      // Undeclared exception!
      try { 
        IR.dec(node0, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = IR.trueNode();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        IR.setterDef("@SHf5", node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = IR.trueNode();
      Node node1 = IR.neg(node0);
      // Undeclared exception!
      try { 
        IR.lt(node1, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = IR.nullNode();
      // Undeclared exception!
      try { 
        IR.lt(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      // Undeclared exception!
      try { 
        IR.script((List<Node>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = IR.name("Unexpected OBJECTLIT child: ");
      node0.setOriginalName("Unexpected OBJECTLIT child: ");
      // Undeclared exception!
      try { 
        IR.catchNode(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.getprop((Node) null, "$@Fy#j?%t");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.trueNode();
      Node node1 = IR.continueOptChainCall(node0, nodeArray0);
      node1.getSourceOffset();
      // Undeclared exception!
      try { 
        IR.getprop(node1, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      String string0 = "";
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.stringKey("", (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      String string0 = "@>;v9;RRQc\"bS+#0";
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.stringKey("@>;v9;RRQc\"bS+#0", (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node[] nodeArray0 = new Node[6];
      Node node0 = IR.falseNode();
      nodeArray0[0] = node0;
      Token token0 = Token.COALESCE;
      Node node1 = null;
      try {
        node1 = new Node(token0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      IR.block(nodeArray0);
      Node node0 = IR.importMeta();
      Node node1 = IR.yield(node0);
      // Undeclared exception!
      try { 
        IR.ifNode(node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = IR.nullNode();
      // Undeclared exception!
      try { 
        IR.comma(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-61);
      byteArray0[5] = (byte)45;
      Node node0 = IR.number(0.5);
      Node node1 = IR.not(node0);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      nodeArray0[4] = node1;
      // Undeclared exception!
      try { 
        IR.arraylit(nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot add already-owned child node.
         // Child: com.google.javascript.rhino.Node@0000000002
         // Existing parent: com.google.javascript.rhino.Node@0000000003
         // New parent: com.google.javascript.rhino.Node@0000000003
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      String string0 = "";
      Node node0 = IR.yield();
      Node node1 = IR.not(node0);
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node0.validateProperties(consumer0);
      // Undeclared exception!
      try { 
        IR.comma(node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000002
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = IR.trueNode();
      Node node1 = IR.inc(node0, true);
      Node node2 = IR.number(4095);
      IR.not(node2);
      // Undeclared exception!
      try { 
        IR.importNode(node0, node1, node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // TRUE
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node[] nodeArray0 = new Node[4];
      Node node0 = IR.continueNode();
      // Undeclared exception!
      try { 
        IR.importNode(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // CONTINUE
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = IR.nullNode();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[8] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      Node node1 = IR.continueNode();
      // Undeclared exception!
      try { 
        IR.or(node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // CONTINUE
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = IR.trueNode();
      // Undeclared exception!
      try { 
        IR.or(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      // Undeclared exception!
      try { 
        IR.name("com.google.javascript.rhino.jstype.JSTypeNative");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Invalid name 'java.lang.String@0000000001'. Did you mean to use NodeUtil.newQName?
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      // Undeclared exception!
      try { 
        IR.root(nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      IR.nullNode();
      Node node0 = IR.name("`;/NGCy,HwkuL+Ing");
      Node node1 = IR.let(node0);
      // Undeclared exception!
      try { 
        IR.exprResult(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // LET
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node[] nodeArray0 = new Node[4];
      IR.name("`Zq4n%+ksXfM@ R\"");
      // Undeclared exception!
      try { 
        IR.root(nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = IR.nullNode();
      node0.isGeneratorSafe();
      JSTypeExpression jSTypeExpression0 = JSTypeExpression.IMPLICIT_TEMPLATE_BOUND;
      ImmutableList<Node> immutableList0 = jSTypeExpression0.getAllTypeNodes();
      Node node1 = IR.block((List<Node>) immutableList0);
      assertFalse(node1.isDestructuringPattern());
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      Node node0 = IR.bigint(bigInteger0);
      BigInteger bigInteger1 = BigInteger.ONE;
      bigInteger0.xor(bigInteger1);
      Node node1 = IR.objectSpread(node0);
      // Undeclared exception!
      try { 
        IR.lt(node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // OBJECT_SPREAD
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      // Undeclared exception!
      try { 
        IR.block(nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)45;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-57);
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      bigInteger0.multiply(bigInteger1);
      bigInteger0.testBit(0);
      bigInteger0.toString();
      Node node0 = IR.bigint(bigInteger0);
      Node node1 = Node.newString("10");
      Node node2 = IR.ne(node1, node0);
      ImmutableList<Node> immutableList0 = ImmutableList.of(node0, node0, node2, node2, node0, node0, node1, node2);
      // Undeclared exception!
      try { 
        IR.block((List<Node>) immutableList0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      // Undeclared exception!
      try { 
        IR.ne((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = IR.labelName("7'@{#('vq");
      // Undeclared exception!
      try { 
        IR.label(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-57);
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      bigInteger0.multiply(bigInteger1);
      bigInteger0.testBit(0);
      bigInteger0.toString();
      Node node0 = IR.bigint(bigInteger0);
      Node node1 = Node.newString("10");
      Node node2 = IR.ne(node1, node0);
      ImmutableList<Node> immutableList0 = ImmutableList.of(node0, node0, node2, node2, node0, node0, node1, node2);
      // Undeclared exception!
      try { 
        IR.block((List<Node>) immutableList0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = IR.trueNode();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      IR.arraylit(nodeArray0);
      node0.getJSDocInfo();
      // Undeclared exception!
      try { 
        IR.objectlit(nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unexpected OBJECTLIT child: TRUE
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.arraylit(nodeArray0);
      node0.getJSDocInfo();
      IR.iterSpread(node0);
      String string0 = "";
      Node node1 = IR.objectlit(nodeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Side-effect flags can only be set on invocation nodes; got com.google.javascript.rhino.Node@0000000003
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = IR.name("Unexpected OBJECTLIT child: ");
      // Undeclared exception!
      try { 
        IR.whileNode(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = IR.empty();
      Node.newString("ASSERTS_MATCHES_RETURN");
      node0.isYieldAll();
      // Undeclared exception!
      try { 
        IR.whileNode(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = IR.breakNode();
      // Undeclared exception!
      try { 
        IR.returnNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      String string0 = "|S>4rJ:eQ";
      Node node0 = IR.stringKey("|S>4rJ:eQ");
      node0.isArrowFunction();
      // Undeclared exception!
      try { 
        IR.returnNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node node0 = IR.nullNode();
      Stack<Node> stack0 = new Stack<Node>();
      // Undeclared exception!
      try { 
        IR.var(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // NULL
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.var((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node[] nodeArray0 = null;
      // Undeclared exception!
      try { 
        IR.objectPattern((Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = IR.yield();
      Node[] nodeArray0 = null;
      // Undeclared exception!
      try { 
        node0.getJSTypeRequired();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no jstypeOrColor: com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.regexp((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = IR.continueNode();
      node0.toStringTree();
      Node node1 = IR.block(node0);
      node1.mayMutateGlobalStateOrThrow();
      // Undeclared exception!
      try { 
        IR.regexp(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = IR.number(1.0);
      node0.toString();
      Node node1 = IR.neg(node0);
      assertFalse(node1.isRegExp());
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = IR.number(0.0);
      // Undeclared exception!
      try { 
        node0.isInferredConstantVar();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Should only be called on name or import * nodes. Found com.google.javascript.rhino.Node$NumberNode@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>();
      PriorityQueue<Node> priorityQueue1 = new PriorityQueue<Node>(priorityQueue0);
      Node node0 = IR.arraylit((Iterable<Node>) priorityQueue1);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Side-effect flags can only be set on invocation nodes; got com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.shne((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.block(nodeArray0);
      ErrorReporter errorReporter0 = ErrorReporter.NULL_INSTANCE;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(errorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateTypeWithTransformation("", node0);
      templateType0.getJSDocInfo();
      node0.setJSDocInfo((JSDocInfo) null);
      // Undeclared exception!
      try { 
        IR.shne(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // BLOCK
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.arrayPattern(nodeArray0);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Side-effect flags can only be set on invocation nodes; got com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node node0 = IR.empty();
      // Undeclared exception!
      try { 
        IR.getelem(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node.newNumber(0.0);
      Node node0 = IR.empty();
      assertFalse(node0.isDestructuringPattern());
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.arraylit(nodeArray0);
      // Undeclared exception!
      try { 
        IR.assignCoalesce(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      IR.nullNode();
      // Undeclared exception!
      try { 
        IR.arraylit((Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      String string0 = "Block node cannot contain %s";
      Node[] nodeArray0 = null;
      // Undeclared exception!
      try { 
        IR.arraylit((Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = IR.breakNode();
      // Undeclared exception!
      try { 
        IR.dec(node0, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = IR.breakNode();
      // Undeclared exception!
      try { 
        node0.setIsArrowFunction(false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node node0 = IR.superNode();
      node0.hasTrailingComma();
      node0.makeNonIndexable();
      String string0 = "X_Vx-[z.FS{fZ],t<{Z";
      String string1 = "";
      node0.isOptionalEs6Typed();
      // Undeclared exception!
      try { 
        node0.clone();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Did you mean cloneNode?
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.arraylit(nodeArray0);
      Node node1 = IR.pos(node0);
      Node node2 = IR.startOptChainCall(node1, nodeArray0);
      IR.startOptChainCall(node2, nodeArray0);
      Node node3 = IR.objectPattern(nodeArray0);
      assertFalse(node3.isWhile());
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.objectPattern(nodeArray0);
      node0.isAddedBlock();
      // Undeclared exception!
      try { 
        node0.isInferredConstantVar();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Should only be called on name or import * nodes. Found com.google.javascript.rhino.Node@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = IR.trueNode();
      Node.Prop node_Prop0 = Node.Prop.SYNTHETIC;
      node0.putProp(node_Prop0, node_Prop0);
      node0.getNonJSDocCommentString();
      // Undeclared exception!
      try { 
        IR.defaultCase(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node node0 = IR.labelName("ABSTRACT");
      // Undeclared exception!
      try { 
        IR.defaultCase(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node node0 = Node.newTemplateLitString("%3?97B'", ":");
      node0.getNonJSDocCommentString();
      // Undeclared exception!
      try { 
        IR.defaultCase((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.doNode((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      // Undeclared exception!
      try { 
        IR.doNode((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.assignCoalesce((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      // Undeclared exception!
      try { 
        IR.assignCoalesce((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = IR.empty();
      String string0 = ":~b(S=q7Qf<";
      // Undeclared exception!
      try { 
        IR.continueOptChainGetprop(node0, ":~b(S=q7Qf<");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // EMPTY
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node node0 = IR.importStar("Unexpected OBJECTLIT child: ");
      node0.isColorFromTypeCast();
      // Undeclared exception!
      try { 
        IR.assignCoalesce(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // IMPORT_STAR Unexpected OBJECTLIT child: 
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = IR.importStar("com.google.javascript.rhino.IR$1");
      // Undeclared exception!
      try { 
        IR.continueOptChainGetprop(node0, "com.google.javascript.rhino.IR$1");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // IMPORT_STAR com.google.javascript.rhino.IR$1
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.catchNode((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      IR.returnNode();
      Node node0 = IR.superNode();
      node0.removeFirstChild();
      // Undeclared exception!
      try { 
        IR.assignOr((Node) null, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = Node.newString("defineProperty");
      node0.toString();
      // Undeclared exception!
      try { 
        IR.assignOr(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node$StringNode@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = IR.returnNode();
      // Undeclared exception!
      try { 
        IR.assignOr(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // RETURN
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = IR.stringKey("%s can't be an expression");
      // Undeclared exception!
      try { 
        IR.iterRest(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // STRING_KEY %s can't be an expression
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = IR.stringKey("");
      // Undeclared exception!
      try { 
        IR.await(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Vector<Node> vector0 = new Vector<Node>();
      Node node0 = IR.script((List<Node>) vector0);
      // Undeclared exception!
      try { 
        IR.await(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = IR.trueNode();
      node0.isYieldAll();
      Node node1 = IR.objectSpread(node0);
      // Undeclared exception!
      try { 
        IR.sheq(node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // OBJECT_SPREAD
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = IR.continueNode();
      // Undeclared exception!
      try { 
        IR.add(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // CONTINUE
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = IR.trueNode();
      Node node1 = IR.not(node0);
      assertFalse(node1.isAnd());
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      String string0 = "kbz*l0{Vr9<zMEN";
      Node node0 = IR.labelName("kbz*l0{Vr9<zMEN");
      Node[] nodeArray0 = new Node[3];
      // Undeclared exception!
      try { 
        IR.newNode(node0, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      // Undeclared exception!
      try { 
        IR.labelName("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = IR.labelName("7'@{#('vq");
      // Undeclared exception!
      try { 
        IR.function(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = IR.breakNode();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      // Undeclared exception!
      try { 
        IR.newNode(node0, nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // BREAK
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      String string0 = "kbz*l0{Vr9<zMEN";
      Node node0 = IR.labelName("kbz*l0{Vr9<zMEN");
      Node[] nodeArray0 = new Node[3];
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        IR.newNode(node0, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Vector<Node> vector0 = new Vector<Node>();
      Node node0 = IR.script((List<Node>) vector0);
      // Undeclared exception!
      try { 
        IR.breakNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      Node node0 = IR.bigint(bigInteger0);
      // Undeclared exception!
      try { 
        IR.let(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      Node node0 = IR.bigint(bigInteger0);
      node0.getQualifiedNameObject();
      // Undeclared exception!
      try { 
        IR.breakNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node node0 = IR.name("e]N\"\"]^!K3pN[h5");
      node0.getStaticSourceFile();
      // Undeclared exception!
      try { 
        IR.let(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Has parent: com.google.javascript.rhino.Node$StringNode@0000000001
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = IR.continueNode();
      // Undeclared exception!
      try { 
        IR.constNode(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        IR.let((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Token token0 = Token.ASSIGN_OR;
      String string0 = "AWAIT";
      Node node0 = Node.newString(token0, "AWAIT");
      node0.isOnlyModifiesThisCall();
      node0.mayMutateArguments();
      // Undeclared exception!
      try { 
        IR.let(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }
}
