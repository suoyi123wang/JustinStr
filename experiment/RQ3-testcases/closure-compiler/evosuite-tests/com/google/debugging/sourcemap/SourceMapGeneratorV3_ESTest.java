/*
 * This file was automatically generated by EvoSuite
 * Thu May 12 09:46:12 GMT 2022
 */

package com.google.debugging.sourcemap;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.debugging.sourcemap.FilePosition;
import com.google.debugging.sourcemap.SourceMapGeneratorV3;
import com.google.debugging.sourcemap.SourceMapSection;
import java.io.IOException;
import java.io.PipedWriter;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SourceMapGeneratorV3_ESTest extends SourceMapGeneratorV3_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FilePosition filePosition0 = new FilePosition(0, 61);
      StringWriter stringWriter0 = new StringWriter(0);
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      sourceMapGeneratorV3_0.addMapping("\n", "\n", filePosition0, filePosition0, filePosition0);
      sourceMapGeneratorV3_0.setStartingPosition(0, 61);
      sourceMapGeneratorV3_0.addMapping("\n", "\n", filePosition0, filePosition0, filePosition0);
      FilePosition filePosition1 = new FilePosition(16, 16);
      sourceMapGeneratorV3_0.addMapping("\n", "e4@e39$|9$>j9~&IDo", filePosition0, filePosition1, filePosition0);
      sourceMapGeneratorV3_0.appendTo(stringWriter0, "JsonReader is closed");
      assertEquals("{\n\"version\":3,\n\"file\":\"JsonReader is closed\",\n\"lineCount\":1,\n\"mappings\":\"A,6D,6D;;\",\n\"sources\":[],\n\"names\":[]\n}\n", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      FilePosition filePosition0 = new FilePosition(1, 180);
      StringWriter stringWriter0 = new StringWriter(1);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      sourceMapGeneratorV3_0.addMapping("[\n", "[\n", filePosition0, filePosition0, filePosition0);
      sourceMapGeneratorV3_0.setStartingPosition(180, 1);
      sourceMapGeneratorV3_0.addMapping(";lPw+3H9Z&j?E", " [synthetic:", filePosition0, filePosition0, filePosition0);
      sourceMapGeneratorV3_0.appendTo(stringBuffer0, " [synthetic:");
      assertEquals("{\n\"version\":3,\n\"file\":\" [synthetic:\",\n\"lineCount\":1,\n\"mappings\":\"A;;\",\n\"sources\":[],\n\"names\":[]\n}\n", stringBuffer0.toString());
      assertEquals("{\n\"version\":3,\n\"file\":\" [synthetic:\",\n\"lineCount\":1,\n\"mappings\":\"A;;\",\n\"sources\":[],\n\"names\":[]\n}\n", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FilePosition filePosition0 = new FilePosition(0, 0);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      FilePosition filePosition1 = new FilePosition(0, (-1606));
      sourceMapGeneratorV3_0.addMapping("", "p6Y42~H_=Ld!", filePosition0, filePosition0, filePosition1);
      sourceMapGeneratorV3_0.appendTo(stringBuffer0, "dH\"zi@@|W");
      assertEquals(94, stringBuffer0.length());
      assertEquals("{\n\"version\":3,\n\"file\":\"dH\\\"zi@@|W\",\n\"lineCount\":1,\n\"mappings\":\";\",\n\"sources\":[],\n\"names\":[]\n}\n", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FilePosition filePosition0 = new FilePosition(0, 20);
      StringWriter stringWriter0 = new StringWriter();
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      sourceMapGeneratorV3_0.addMapping("", "t-E`x73$wU", filePosition0, filePosition0, filePosition0);
      sourceMapGeneratorV3_0.setWrapperPrefix("t-E`x73$wU");
      sourceMapGeneratorV3_0.appendTo(stringWriter0, "f");
      assertEquals("{\n\"version\":3,\n\"file\":\"f\",\n\"lineCount\":1,\n\"mappings\":\"A;\",\n\"sources\":[],\n\"names\":[]\n}\n", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      FilePosition filePosition0 = new FilePosition(5039, (-1095));
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      sourceMapGeneratorV3_0.addMapping("[\n", "[\n", filePosition0, filePosition0, filePosition0);
      sourceMapGeneratorV3_0.setWrapperPrefix("[\n");
      sourceMapGeneratorV3_0.appendTo(stringBuffer0, "~");
      assertEquals("{\n\"version\":3,\n\"file\":\"~\",\n\"lineCount\":2,\n\"mappings\":\"A;;;\",\n\"sources\":[],\n\"names\":[]\n}\n", stringBuffer0.toString());
      assertEquals("{\n\"version\":3,\n\"file\":\"~\",\n\"lineCount\":2,\n\"mappings\":\"A;;;\",\n\"sources\":[],\n\"names\":[]\n}\n", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      // Undeclared exception!
      try { 
        sourceMapGeneratorV3_0.mergeMapSection(52, (-994), "`/Q])<W");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      FilePosition filePosition0 = new FilePosition(1, 1);
      SourceMapGeneratorV3.ConsumerEntryVisitor sourceMapGeneratorV3_ConsumerEntryVisitor0 = sourceMapGeneratorV3_0.new ConsumerEntryVisitor();
      sourceMapGeneratorV3_ConsumerEntryVisitor0.visit("4b*oH\"h|0=|Q\"w(6Xn", "4b*oH\"h|0=|Q\"w(6Xn", filePosition0, filePosition0, (FilePosition) null);
      assertEquals(1, filePosition0.getColumn());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FilePosition filePosition0 = new FilePosition(0, 61);
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      sourceMapGeneratorV3_0.setStartingPosition(0, 5);
      FilePosition filePosition1 = new FilePosition(36, 2);
      sourceMapGeneratorV3_0.addMapping("[", "[\n", filePosition0, filePosition0, filePosition1);
      assertFalse(filePosition1.equals((Object)filePosition0));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      sourceMapGeneratorV3_0.setStartingPosition(55, 55);
      FilePosition filePosition0 = new FilePosition((-4), (-4));
      SourceMapGeneratorV3.ConsumerEntryVisitor sourceMapGeneratorV3_ConsumerEntryVisitor0 = sourceMapGeneratorV3_0.new ConsumerEntryVisitor();
      FilePosition filePosition1 = new FilePosition(1525, (-2126));
      sourceMapGeneratorV3_ConsumerEntryVisitor0.visit("", "", filePosition1, filePosition0, filePosition0);
      assertFalse(filePosition1.equals((Object)filePosition0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      sourceMapGeneratorV3_0.setStartingPosition(2318, 0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      sourceMapGeneratorV3_0.setWrapperPrefix("\n]");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SourceMapGeneratorV3.Mapping sourceMapGeneratorV3_Mapping0 = new SourceMapGeneratorV3.Mapping();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      SourceMapGeneratorV3.ConsumerEntryVisitor sourceMapGeneratorV3_ConsumerEntryVisitor0 = sourceMapGeneratorV3_0.new ConsumerEntryVisitor();
      FilePosition filePosition0 = new FilePosition((-2242), (-2242));
      sourceMapGeneratorV3_ConsumerEntryVisitor0.visit("s*&!f", "&q7I-=_|)4lwicR6;v", filePosition0, filePosition0, filePosition0);
      assertEquals((-2242), filePosition0.getLine());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      sourceMapGeneratorV3_0.addExtension("x_Invalid attempt to remove: ", "x_Invalid attempt to remove: ");
      boolean boolean0 = sourceMapGeneratorV3_0.hasExtension("x_Invalid attempt to remove: ");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      Object object0 = new Object();
      sourceMapGeneratorV3_0.addExtension("x_x_>/lwMA|$", object0);
      Object object1 = sourceMapGeneratorV3_0.getExtension("x_x_>/lwMA|$");
      assertSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      // Undeclared exception!
      try { 
        sourceMapGeneratorV3_0.setWrapperPrefix((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.debugging.sourcemap.SourceMapGeneratorV3", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      try { 
        sourceMapGeneratorV3_0.mergeMapSection(13, 13, "y`6~+i*(\"NAH^5T9P", (SourceMapGeneratorV3.ExtensionMergeAction) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // JSON parse exception: org.evosuite.runtime.mock.java.lang.MockThrowable: Expected a com.google.javascript.jscomp.jarjar.com.google.gson.JsonObject but was com.google.javascript.jscomp.jarjar.com.google.gson.JsonPrimitive
         //
         verifyException("com.google.debugging.sourcemap.SourceMapObjectParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      // Undeclared exception!
      try { 
        sourceMapGeneratorV3_0.mergeMapSection(10, 143, (String) null, (SourceMapGeneratorV3.ExtensionMergeAction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.debugging.sourcemap.SourceMapObjectParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      // Undeclared exception!
      try { 
        sourceMapGeneratorV3_0.mergeMapSection((-852), (-852), "t-", (SourceMapGeneratorV3.ExtensionMergeAction) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      // Undeclared exception!
      try { 
        sourceMapGeneratorV3_0.mergeMapSection(52, 52, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.debugging.sourcemap.SourceMapObjectParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "_#2\n");
      // Undeclared exception!
      try { 
        sourceMapGeneratorV3_0.appendTo(charBuffer0, "*AVU];)NZj:M;>M#XW");
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      CharBuffer charBuffer0 = CharBuffer.allocate(12);
      // Undeclared exception!
      try { 
        sourceMapGeneratorV3_0.appendTo(charBuffer0, "offset");
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = "\\u5\n";
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        sourceMapGeneratorV3_0.appendTo(pipedWriter0, string0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) ":IlN~V!Xj)<");
      LinkedList<SourceMapSection> linkedList0 = new LinkedList<SourceMapSection>();
      // Undeclared exception!
      try { 
        sourceMapGeneratorV3_0.appendIndexMapTo(charBuffer0, (String) null, linkedList0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<SourceMapSection> linkedList0 = new LinkedList<SourceMapSection>();
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      CharBuffer charBuffer0 = CharBuffer.allocate(14);
      // Undeclared exception!
      try { 
        sourceMapGeneratorV3_0.appendIndexMapTo(charBuffer0, "o", linkedList0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        sourceMapGeneratorV3_0.appendIndexMapTo(stringWriter0, "\n]", (List<SourceMapSection>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.debugging.sourcemap.SourceMapGeneratorV3", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        sourceMapGeneratorV3_0.appendIndexMapTo(pipedWriter0, "x]x_z`6++il(\"AH^TP", (List<SourceMapSection>) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      // Undeclared exception!
      try { 
        sourceMapGeneratorV3_0.addMapping("` E/SSkG8u", "` E/SSkG8u", (FilePosition) null, (FilePosition) null, (FilePosition) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.debugging.sourcemap.SourceMapGeneratorV3", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      // Undeclared exception!
      try { 
        sourceMapGeneratorV3_0.addExtension((String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FilePosition filePosition0 = new FilePosition(2255, 70);
      StringWriter stringWriter0 = new StringWriter(70);
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      FilePosition filePosition1 = new FilePosition(70, 70);
      sourceMapGeneratorV3_0.addMapping("x_I&&g|\"BF&rNA?,", "ve", filePosition1, filePosition1, filePosition0);
      sourceMapGeneratorV3_0.appendTo(stringWriter0, "ve");
      sourceMapGeneratorV3_0.appendTo(stringWriter0, "x_x_x`x_z`6++il(\"AH^TP");
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      SourceMapSection sourceMapSection0 = SourceMapSection.forURL("h", 2, 2);
      LinkedList<SourceMapSection> linkedList0 = new LinkedList<SourceMapSection>();
      linkedList0.addFirst(sourceMapSection0);
      StringWriter stringWriter0 = new StringWriter();
      sourceMapGeneratorV3_0.appendIndexMapTo(stringWriter0, "h", linkedList0);
      assertEquals("{\n\"version\":3,\n\"file\":\"h\",\n\"sections\":[\n{\n\"offset\":{\n\"line\":2,\n\"column\":2\n},\n\"url\":\"h\"\n}\n]\n}\n", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      SourceMapSection sourceMapSection0 = SourceMapSection.forMap("t-%`x73$wn", 7, 7);
      LinkedList<SourceMapSection> linkedList0 = new LinkedList<SourceMapSection>();
      linkedList0.add(sourceMapSection0);
      linkedList0.addFirst(sourceMapSection0);
      StringWriter stringWriter0 = new StringWriter();
      sourceMapGeneratorV3_0.appendIndexMapTo(stringWriter0, "t-%`x73$wn", linkedList0);
      assertEquals("{\n\"version\":3,\n\"file\":\"t-%`x73$wn\",\n\"sections\":[\n{\n\"offset\":{\n\"line\":7,\n\"column\":7\n},\n\"map\":t-%`x73$wn\n},\n{\n\"offset\":{\n\"line\":7,\n\"column\":7\n},\n\"map\":t-%`x73$wn\n}\n]\n}\n", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FilePosition filePosition0 = new FilePosition((-104), 61);
      StringWriter stringWriter0 = new StringWriter(61);
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      FilePosition filePosition1 = new FilePosition(49, 61);
      sourceMapGeneratorV3_0.addMapping("x`x_z`6++il(\"AH^TP", "QYCS", filePosition1, filePosition0, (FilePosition) null);
      // Undeclared exception!
      try { 
        sourceMapGeneratorV3_0.appendTo(stringWriter0, "QYCS");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      FilePosition filePosition0 = new FilePosition((-1786), (-1786));
      StringWriter stringWriter0 = new StringWriter();
      FilePosition filePosition1 = new FilePosition(203, (-1786));
      sourceMapGeneratorV3_0.addMapping("com.google.javascript.jscomp.jarjar.com.google.common.collect.AbstractIterator", "version", filePosition1, filePosition0, filePosition0);
      // Undeclared exception!
      try { 
        sourceMapGeneratorV3_0.appendTo(stringWriter0, "version");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FilePosition filePosition0 = new FilePosition(89, (-1822));
      StringWriter stringWriter0 = new StringWriter(95);
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      FilePosition filePosition1 = new FilePosition(95, (-143));
      sourceMapGeneratorV3_0.addMapping("x_Not an assignment op:", "x_Not an assignment op:", filePosition0, filePosition0, filePosition1);
      sourceMapGeneratorV3_0.addMapping("", "x`x_z`6++il(\"AH^TP", filePosition0, filePosition0, filePosition0);
      sourceMapGeneratorV3_0.appendTo(stringWriter0, "instrument for coverage");
      assertEquals("{\n\"version\":3,\n\"file\":\"instrument for coverage\",\n\"lineCount\":96,\n\"mappings\":\"A;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9xDAyF9xDA;;;;;;;\",\n\"sources\":[\"x_Not an assignment op:\"],\n\"names\":[\"x_Not an assignment op:\"]\n}\n", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FilePosition filePosition0 = new FilePosition(0, 0);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      sourceMapGeneratorV3_0.setStartingPosition(5, 2318);
      sourceMapGeneratorV3_0.addMapping("t-E`x73$wU", "t-E`x73$wU", filePosition0, filePosition0, filePosition0);
      sourceMapGeneratorV3_0.setStartingPosition(5, 2411);
      sourceMapGeneratorV3_0.addMapping("", "p6Y42~H_=Ld!", filePosition0, filePosition0, filePosition0);
      sourceMapGeneratorV3_0.appendTo(stringBuffer0, "dH\"zi@@|W");
      assertEquals(96, stringBuffer0.length());
      assertEquals("{\n\"version\":3,\n\"file\":\"dH\\\"zi@@|W\",\n\"lineCount\":1,\n\"mappings\":\"A;;\",\n\"sources\":[],\n\"names\":[]\n}\n", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      FilePosition filePosition0 = new FilePosition(36, 36);
      FilePosition filePosition1 = new FilePosition(36, (-1939));
      sourceMapGeneratorV3_0.addMapping(":F .wM|$", "-wEd", filePosition0, filePosition1, filePosition0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("Factory[type=");
      sourceMapGeneratorV3_0.appendTo(mockPrintStream0, "Factory[type=");
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      Object object0 = sourceMapGeneratorV3_0.getExtension("x_goog.require");
      sourceMapGeneratorV3_0.addExtension("x_goog.require", object0);
      sourceMapGeneratorV3_0.removeExtension("x_goog.require");
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      sourceMapGeneratorV3_0.removeExtension("Xj*}H1F6`z&!k");
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      try { 
        sourceMapGeneratorV3_0.addExtension("`/Q])<W", "`/Q])<W");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Extension '`/Q])<W' must start with 'x_'
         //
         verifyException("com.google.debugging.sourcemap.SourceMapGeneratorV3", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      Object object0 = new Object();
      sourceMapGeneratorV3_0.addExtension("x_5(VQ ~ydC#<TwjOR U", object0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("x_5(VQ ~ydC#<TwjOR U");
      sourceMapGeneratorV3_0.appendTo(mockPrintStream0, "x_5(VQ ~ydC#<TwjOR U");
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      sourceMapGeneratorV3_0.addExtension("x_5(VQ ~ydC#<TwjOR U", "x_5(VQ ~ydC#<TwjOR U");
      MockPrintStream mockPrintStream0 = new MockPrintStream("o=oX't");
      sourceMapGeneratorV3_0.appendTo(mockPrintStream0, "x_");
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      sourceMapGeneratorV3_0.setSourceRoot("\"");
      MockPrintStream mockPrintStream0 = new MockPrintStream("\"");
      sourceMapGeneratorV3_0.appendTo(mockPrintStream0, "\"");
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      MockPrintStream mockPrintStream0 = new MockPrintStream("x_");
      sourceMapGeneratorV3_0.appendTo(mockPrintStream0, (String) null);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      FilePosition filePosition0 = new FilePosition(68, 5);
      FilePosition filePosition1 = new FilePosition(68, 568);
      sourceMapGeneratorV3_0.addMapping("{8GQJ#l", "{8GQJ#l", filePosition0, filePosition1, filePosition0);
      // Undeclared exception!
      try { 
        sourceMapGeneratorV3_0.addMapping("{8GQJ#l", "X,|Fh,-", filePosition0, filePosition0, filePosition1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Incorrect source mappings order, previous : (java.lang.Integer@0000000008,java.lang.Integer@0000000009)
         // new : (java.lang.Integer@0000000008,java.lang.Integer@0000000010)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      FilePosition filePosition0 = new FilePosition(59, 59);
      sourceMapGeneratorV3_0.addMapping("!!gnE*E*9sS", "!!gnE*E*9sS", filePosition0, filePosition0, filePosition0);
      FilePosition filePosition1 = new FilePosition((-4182052), 100);
      // Undeclared exception!
      try { 
        sourceMapGeneratorV3_0.addMapping("At`x}MgZEk", "!!gnE*E*9sS", filePosition0, filePosition1, filePosition1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Incorrect source mappings order, previous : (java.lang.Integer@0000000008,java.lang.Integer@0000000008)
         // new : (java.lang.Integer@0000000009,java.lang.Integer@0000000010)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      FilePosition filePosition0 = new FilePosition(36, 36);
      sourceMapGeneratorV3_0.addMapping("\n}\n", "\n}\n", filePosition0, filePosition0, filePosition0);
      sourceMapGeneratorV3_0.addMapping(":F .wM|$", "-wEd", filePosition0, filePosition0, filePosition0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("Factory[type=");
      sourceMapGeneratorV3_0.appendTo(mockPrintStream0, "Factory[type=");
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      FilePosition filePosition0 = new FilePosition((-1), (-1));
      sourceMapGeneratorV3_0.addMapping("_#", "_#", filePosition0, filePosition0, filePosition0);
      assertEquals((-1), filePosition0.getLine());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      FilePosition filePosition0 = new FilePosition((-1317), (-1317));
      sourceMapGeneratorV3_0.addMapping((String) null, ":IlN~V!Xj)<", filePosition0, filePosition0, filePosition0);
      assertEquals((-1317), filePosition0.getColumn());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      // Undeclared exception!
      try { 
        sourceMapGeneratorV3_0.setStartingPosition(87, (-2242));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      // Undeclared exception!
      try { 
        sourceMapGeneratorV3_0.setStartingPosition((-325), (-325));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.jarjar.com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      sourceMapGeneratorV3_0.addSourcesContent("x_k", "l;;>0RjmPfz/Q}nrv&");
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      sourceMapGeneratorV3_0.reset();
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      try { 
        sourceMapGeneratorV3_0.mergeMapSection(330, 330, "com.google.debugging.sourcemap.SourceMapGeneratorV3$ConsumerEntryVisitor");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // JSON parse exception: org.evosuite.runtime.mock.java.lang.MockThrowable: Expected a com.google.javascript.jscomp.jarjar.com.google.gson.JsonObject but was com.google.javascript.jscomp.jarjar.com.google.gson.JsonPrimitive
         //
         verifyException("com.google.debugging.sourcemap.SourceMapObjectParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      sourceMapGeneratorV3_0.validate(true);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      sourceMapGeneratorV3_0.setSourceRoot("");
      MockPrintStream mockPrintStream0 = new MockPrintStream("x_x_2wvp(");
      sourceMapGeneratorV3_0.appendTo(mockPrintStream0, "x_x_2wvp(");
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      SourceMapSection sourceMapSection0 = SourceMapSection.forMap("OsoO;&s", (-16), 71);
      LinkedList<SourceMapSection> linkedList0 = new LinkedList<SourceMapSection>();
      linkedList0.addFirst(sourceMapSection0);
      StringWriter stringWriter0 = new StringWriter();
      sourceMapGeneratorV3_0.appendIndexMapTo(stringWriter0, "h", linkedList0);
      assertEquals("{\n\"version\":3,\n\"file\":\"h\",\n\"sections\":[\n{\n\"offset\":{\n\"line\":-16,\n\"column\":71\n},\n\"map\":OsoO;&s\n}\n]\n}\n", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      SourceMapGeneratorV3 sourceMapGeneratorV3_0 = new SourceMapGeneratorV3();
      boolean boolean0 = sourceMapGeneratorV3_0.hasExtension("f");
      assertFalse(boolean0);
  }
}
