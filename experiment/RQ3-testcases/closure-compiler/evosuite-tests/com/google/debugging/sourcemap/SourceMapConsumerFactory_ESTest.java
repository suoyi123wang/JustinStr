/*
 * This file was automatically generated by EvoSuite
 * Thu May 12 10:07:38 GMT 2022
 */

package com.google.debugging.sourcemap;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.debugging.sourcemap.SourceMapConsumerFactory;
import com.google.debugging.sourcemap.SourceMapConsumerV3;
import com.google.debugging.sourcemap.SourceMapSupplier;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SourceMapConsumerFactory_ESTest extends SourceMapConsumerFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SourceMapConsumerV3.DefaultSourceMapSupplier sourceMapConsumerV3_DefaultSourceMapSupplier0 = new SourceMapConsumerV3.DefaultSourceMapSupplier();
      // Undeclared exception!
      try { 
        SourceMapConsumerFactory.parse((String) null, (SourceMapSupplier) sourceMapConsumerV3_DefaultSourceMapSupplier0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        SourceMapConsumerFactory.parse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SourceMapConsumerV3.DefaultSourceMapSupplier sourceMapConsumerV3_DefaultSourceMapSupplier0 = new SourceMapConsumerV3.DefaultSourceMapSupplier();
      try { 
        SourceMapConsumerFactory.parse("{. Forgot to register a type adapter?", (SourceMapSupplier) sourceMapConsumerV3_DefaultSourceMapSupplier0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // JSON parse exception: org.evosuite.runtime.mock.java.lang.MockThrowable: org.evosuite.runtime.mock.java.lang.MockThrowable: Expected ':' at line 1 column 5 path $..
         //
         verifyException("com.google.debugging.sourcemap.SourceMapObjectParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SourceMapConsumerV3.DefaultSourceMapSupplier sourceMapConsumerV3_DefaultSourceMapSupplier0 = new SourceMapConsumerV3.DefaultSourceMapSupplier();
      try { 
        SourceMapConsumerFactory.parse("/** Begin line maps. **/", (SourceMapSupplier) sourceMapConsumerV3_DefaultSourceMapSupplier0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // This appears to be a V1 SourceMap, which is not supported.
         //
         verifyException("com.google.debugging.sourcemap.SourceMapConsumerFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SourceMapConsumerV3.DefaultSourceMapSupplier sourceMapConsumerV3_DefaultSourceMapSupplier0 = new SourceMapConsumerV3.DefaultSourceMapSupplier();
      try { 
        SourceMapConsumerFactory.parse("", (SourceMapSupplier) sourceMapConsumerV3_DefaultSourceMapSupplier0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unable to detect source map format
         //
         verifyException("com.google.debugging.sourcemap.SourceMapConsumerFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      try { 
        SourceMapConsumerFactory.parse("/** Begin line maps. **/Unknown source map version:");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // This appears to be a V1 SourceMap, which is not supported.
         //
         verifyException("com.google.debugging.sourcemap.SourceMapConsumerFactory", e);
      }
  }
}
